//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 6/5/2025 6:02:22 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable disable

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Dkd.App.Planingschedule.Repository.Entities.Config
{
    /// <summary>
    /// There are no comments for SysUserConfiguration in the schema.
    /// </summary>
    public class SysUserConfiguration : AbstractEntityTypeConfiguration<SysUser>
    {
        /// <summary>
        /// There are no comments for Configure(EntityTypeBuilder<SysUser> builder) method in the schema.
        /// </summary>
        public override void Configure(EntityTypeBuilder<SysUser> builder)
        {
            base.Configure(builder);
            builder.Property(x => x.Account).HasColumnName(@"account").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(32);
            builder.Property(x => x.Avatar).HasColumnName(@"avatar").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(128);
            builder.Property(x => x.Birthday).HasColumnName(@"birthday").HasColumnType(@"datetime").ValueGeneratedNever().HasPrecision(6);
            builder.Property(x => x.Email).HasColumnName(@"email").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(32);
            builder.Property(x => x.FkMenu).HasColumnName(@"fk_menu").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(8000);
            builder.Property(x => x.FkOrganization).HasColumnName(@"fk_organization").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.FkRole).HasColumnName(@"fk_role").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(8000);
            builder.Property(x => x.Gender).HasColumnName(@"gender").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Isdeleted).HasColumnName(@"isdeleted").HasColumnType(@"tinyint").IsRequired().ValueGeneratedNever().HasPrecision(1, 0).HasDefaultValueSql(@"0");
            builder.Property(x => x.Mobile).HasColumnName(@"mobile").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(11);
            builder.Property(x => x.Name).HasColumnName(@"name").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(32);
            builder.Property(x => x.Password).HasColumnName(@"password").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(32);
            builder.Property(x => x.Salt).HasColumnName(@"salt").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(6);
            builder.Property(x => x.Status).HasColumnName(@"status").HasColumnType(@"tinyint").IsRequired().ValueGeneratedNever().HasPrecision(1, 0);
            builder.Property(x => x.OtpToken).HasColumnName(@"otpToken").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(6);
            builder.Property(x => x.IsConfirmed).HasColumnName(@"IsConfirmed").HasColumnType(@"tinyint").IsRequired().ValueGeneratedNever().HasPrecision(1, 0).HasDefaultValueSql(@"0");
            builder.Property(x => x.Otpvalidto).HasColumnName(@"otpvalidto").HasColumnType(@"datetime").ValueGeneratedNever();
            builder.Property(x => x.NationalCode).HasColumnName(@"NationalCode").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(10);
            builder.Property(x => x.FkUserType).HasColumnName(@"fk_UserType").HasColumnType(@"bigint").ValueGeneratedNever();
            builder.HasKey(@"Id");
            builder.HasIndex(@"Mobile").IsUnique(true);
            builder.HasOne(x => x.SysUserType).WithMany(op => op.SysUsers).HasForeignKey(@"FkUserType").IsRequired(false);
        }


    }

}
