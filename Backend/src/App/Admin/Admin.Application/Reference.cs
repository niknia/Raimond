//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.ServiceModel;

namespace MyApp.SvcProxy
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyApp.SvcProxy.Online2ServicesSoap")]
    public interface Online2ServicesSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransactionVSTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> TransactionVSTicketAsync(System.DateTime fromDate, System.DateTime todate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/trainboss", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> trainbossAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResultAdySeatDataset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ResultAdySeatDatasetAsync(int Trainnumber, System.DateTime Tripdate, int State_id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.DownloadFileResponse> DownloadFileAsync(MyApp.SvcProxy.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UploadFileResponse> UploadFileAsync(MyApp.SvcProxy.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetListFileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CauseInactive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CauseInactiveAsync(int selercode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPayBankTransactionInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPayBankTransactionInfoAsync(int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPayBankOperationInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPayBankOperationInfoAsync(int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetPayBankSettled", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> SetPayBankSettledAsync(int TransActionid, int upValue, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetPayBankReversed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> SetPayBankReversedAsync(int TransActionid, int upValue, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addPayBankRefundAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> addPayBankRefundAmountAsync(int TransActionid, int amount, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketAmountBySMCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> TicketAmountBySMCodeAsync(int SMCODE, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPathAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotalSeatTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTotalSeatTicketAsync(int pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWagonListTrian", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonListTrianAsync(int pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStationListTrian", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetStationListTrianAsync(int pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getUserCredit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> getUserCreditAsync(int pSC, int pUserCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreditTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> CreditTransactionAsync(int pType, int pSC, int pUser, int pAmount, int pRefCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreditReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CreditReportAsync(int pSC, int pUserCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersonRailways", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PersonRailwaysAsync(int perscode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersonRailwaysPost", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PersonRailwaysPostAsync(int perscode, int pSellSerial, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RollBackBilit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> RollBackBilitAsync(int pTicketNumber, string pTicketSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RaiStockService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RaiStockServiceAsync(
                    ushort CustomerCode, 
                    string ContactNumber, 
                    string ContactDate, 
                    string BillDate, 
                    string BillNumber, 
                    string fromDate, 
                    string toDate, 
                    string Desc, 
                    long p1, 
                    long p2, 
                    long p3, 
                    long p4, 
                    long p5, 
                    long p6, 
                    long p7, 
                    long p8, 
                    string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RaiDataservice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RaiDataserviceAsync(ushort CustomerCode, string ContactNumber, string ContactDate, string BillNumber, string fromDate, string toDate, string p1, string p2, string p3, string p4, string F4, string RouindDamage, string FoodCost, string FormulaSubsidy, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInformationTrain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetInformationTrainAsync(int TrainNumber, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainBossBozalin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainBossBozalinAsync(int TrainBossPersCode, System.DateTime FromDate, System.DateTime ToDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPriceTrain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPriceTrainAsync(int TrainNumber, int WagonNumber, int FromStation, int ToStation, int CircularPeriod, int CircularNumberSerial, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStationConnection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetStationConnectionAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainConnectionList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainConnectionListAsync(int FromStation, int EndStation, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListExcursion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetListExcursionAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSaleSystemParameters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSaleSystemParametersAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBarcodeCheckLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateBarcodeCheckLogAsync(string DataSend, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DlgTrainPriceHandHeldList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> DlgTrainPriceHandHeldListAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSaleInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSaleInfoAsync(int SaleId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFreePassengerServices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetFreePassengerServicesAsync(int circularPeriod, int circularNumberSerial, int trainNumber, int startStationCode, int endStationCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketHasFPS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> TicketHasFPSAsync(int ticketNumber, int ticketSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Language", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LanguageAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataBarCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetDataBarCodeAsync(string BarcodeText, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketTypeInfoByTicketNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketTypeInfoByTicketNumberAsync(int ticketNumber, int ticketSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketOwner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetTicketOwnerAsync(int ticketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSaleCenterAllowCompanyDescription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetSaleCenterAllowCompanyDescriptionAsync(int saleCenterCode, int companyCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSaleCenterAllowCompanyDescription2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetSaleCenterAllowCompanyDescription2Async(int saleCenterCode, int circularPeriod, int circularNumberSerial, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCoronaStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CheckCoronaStatusAsync(string[] nationalCodes, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCoronaStatusOmid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CheckCoronaStatusOmidAsync(string[] nationalCodes, int startStation, int endStation, int wagonType, int trainNumber, System.DateTime moveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AllowRegisterCoronaOmid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> AllowRegisterCoronaOmidAsync(string[] nationalCodes, int startStation, int endStation, int wagonType, int trainNumber, System.DateTime moveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainInfoAsync(System.DateTime moveDate, int trainNumber, int reportType, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketByWagonUicReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketByWagonUicReportAsync(string uicWagon, System.DateTime fromMoveDate, System.DateTime toMoveDate, int trainNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketsResponse> UpdateTicketsAsync(MyApp.SvcProxy.UpdateTicketsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateWagons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateWagonsResponse> UpdateWagonsAsync(MyApp.SvcProxy.UpdateWagonsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePayData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdatePayDataResponse> UpdatePayDataAsync(MyApp.SvcProxy.UpdatePayDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBozalins", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateBozalinsAsync(string DataSend, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSuggestions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateSuggestionsResponse> UpdateSuggestionsAsync(MyApp.SvcProxy.UpdateSuggestionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateErrorLogs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateErrorLogsResponse> UpdateErrorLogsAsync(MyApp.SvcProxy.UpdateErrorLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSMCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSMCodeAsync(long saleID, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetUserIDAsync(string ID, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StationTimeLine2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> StationTimeLine2Async(int pTrainNumber, int pSCP, int pSCPs, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StationTimeLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> StationTimeLineAsync(int pTrainNumber, int pSCP, int pSCPs, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DiscountMoney", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<decimal> DiscountMoneyAsync(int PathCode, int WagonTypeCode, int Scp, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRailwayOfficeTicketData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRailwayOfficeTicketDataAsync(int orderId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketListByWagonUic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.GetTicketListByWagonUicResponse> GetTicketListByWagonUicAsync(MyApp.SvcProxy.GetTicketListByWagonUicRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastFinancialPeriodDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetLastFinancialPeriodDateAsync(int companyId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGuaranteeAmountForSeller", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetGuaranteeAmountForSellerAsync(int companyId, int sellerCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWagonCapacityByTrainNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonCapacityByTrainNumberAsync(int Owners, int TrainNumber, System.DateTime MD, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsCompartmentByTicketNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> IsCompartmentByTicketNumberAsync(int ticketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPassengerTicketList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPassengerTicketListAsync(string nationalCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketListByRegisterDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketListByRegisterDateAsync(int ownerCode, System.DateTime registerDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketListByMoveDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketListByMoveDateAsync(System.DateTime moveDate, int skip, int take, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketPrintCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetTicketPrintCodeAsync(string ticketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShortLinkByTicketNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetShortLinkByTicketNumberAsync(int ticketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculatePriceForTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CalculatePriceForTicketAsync(
                    int sellId, 
                    string[] cName, 
                    string[] cFamily, 
                    string[] nationalCd, 
                    int[] tcktType, 
                    int[] tariff, 
                    int[] Food, 
                    int[] birthDate, 
                    string[] promotionCode, 
                    decimal percentDiscountForRajaSite, 
                    int appcode, 
                    int circularNumberSerial, 
                    int circularPeriod, 
                    System.DateTime seatMoveDate, 
                    string seatExitTime, 
                    int rateCode, 
                    int pathCode, 
                    int rationCode, 
                    string checksum, 
                    string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllRefund", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetAllRefundAsync(string orderId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRefund", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRefundAsync(long refundId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllRefundDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetAllRefundDetailsAsync(string orderId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRefundDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRefundDetailsAsync(long refundId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAllRefundDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateAllRefundDetailsAsync(int id, int newPrice, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateRefundDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateRefundDetailsAsync(long id, int newPrice, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRajaSiteCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRajaSiteCartAsync(int ticketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAllRefundHotelDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateAllRefundHotelDetailsAsync(int id, int newPrice, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAllRefundTransactionBank", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateAllRefundTransactionBankAsync(string orderId, string bankTransActionId, int status, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAllRefundTransactionLocal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateAllRefundTransactionLocalAsync(string orderId, int status, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateRefundStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateRefundStatusAsync(long id, int status, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SendSMSAsync(string message, string mobile, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MessageService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task MessageServiceAsync(string message, string mobile, int smsType, int trainOwner, int sendSmsRequest, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRefundOrderInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRefundOrderInfoAsync(string orderId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketDataAsync(int ticketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketDataSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketDataSummaryAsync(int ticketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SearchTicketAsync(string qry, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketInfoAsync(string TcktSr, int TcktNo, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketInfoGeneral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketInfoGeneralAsync(long Tcktid, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotalTicketInfoGeneral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTotalTicketInfoGeneralAsync(string Tcktseries, int TcktNo, int SaleCenterCD, int SaleCenterCDReg, int WN, int SeatNu, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketReportDisabled", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportDisabledAsync(string NationalCode, System.DateTime MoveDate, int TrainNumber, int WagonNumber, int SeatNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportAsync(int appcode, int SaleId, int TicketNember, string TicketSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketReportA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportAAsync(int appcode, int SaleId, int TicketNember, string TicketSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketReportA_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportA_NewAsync(int appcode, int SaleId, int TicketNember, string TicketSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketReportArbaeen", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportArbaeenAsync(int GoTicketNember, string GOTicketSeries, int BackTicketNember, string BackTicketSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InternetTicketReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> InternetTicketReportAsync(int appcode, string TicketNember, string TicketSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSaleCentersList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSaleCentersListAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckDeadLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CheckDeadLineAsync(string userCode, string ip, System.DateTime loginTime, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainListWithOwner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainListWithOwnerAsync(int fromStation, int toStation, System.DateTime moveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainListWagon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainListWagonAsync(int FromStation, int ToStation, System.DateTime MD, System.DateTime ED, int RationCode, int SexCode, int TrainNo, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainListFreeseat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainListFreeseatAsync(System.DateTime MD, int TrainNo, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOptionalServices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOptionalServicesAsync(int SCP, int TrainNo, int Scps, int WagonTypeCode, System.DateTime MoveDateTimeTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOptionalServicesv2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOptionalServicesv2Async(int SCP, int TrainNo, int startstation, int endstation, int Scps, int WagonTypeCode, System.DateTime MoveDateTimeTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterTiket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.RegisterTiketResponse> RegisterTiketAsync(MyApp.SvcProxy.RegisterTiketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterTiket_V3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.RegisterTiket_V3Response> RegisterTiket_V3Async(MyApp.SvcProxy.RegisterTiket_V3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CallCenterBookingSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CallCenterBookingSMSAsync(int BookingNo, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManagementSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ManagementSMSAsync(int BookingNo, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManagementRajaSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ManagementRajaSMSAsync(int BookingNo, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task DeleteTicketAsync(long sellId, int SaleCenterCD, int TrainNumber, System.DateTime movedate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTicket2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<short> DeleteTicket2Async(long sellId, int SaleCenterCD, int TrainNumber, System.DateTime movedate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListTicketNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListTicketNumberAsync(int SellId, int SeatCount, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> TicketManagementAsync(int pSellId, int pmanagementCode, int porderNumber, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChkTicketManagement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ChkTicketManagementAsync(int pmanagementCode, int porderNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewTicketSeat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ViewTicketSeatAsync(int LockedBy, int isFloat, int FS, int TS, int TrainNumber, System.DateTime moveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TrainMsg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TrainMsgAsync(int TrainNo, System.DateTime MD, int WagonType, int pRationCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewPriceTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ViewPriceTicketAsync(int rateCode, int tariffCode, int TcktTypeCD, int pathCode, int fromStation, int totStation, int wagonType, System.DateTime pDate, int trainNumber, int pScps, string discountClub, int soldcount, int pRation, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewPriceTicket2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ViewPriceTicket2Async(int rateCode, int tariffCode, int TcktTypeCD, int pathCode, int fromStation, int totStation, int wagonType, System.DateTime pDate, int trainNumber, int pScps, string discountClub, int soldcount, int pRation, int passengerCount, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentAllowedRation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> AgentAllowedRationAsync(int SaleCenterCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentAllowedTarrif", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> AgentAllowedTarrifAsync(int SaleCenterCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentAllowedTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> AgentAllowedTicketAsync(int SaleCenterCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaleCenterSoldTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterSoldTicketAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, string pStatusString, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentMembersActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> AgentMembersActivityAsync(int pAgentCode, System.DateTime FromDate, System.DateTime ToDate, int SaleCenter, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LastSerialTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LastSerialTicketAsync(int pSaleCenterCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertSerialTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> InsertSerialTicketAsync(int pSellCenterCode, long pFirstNumber, long pFinishNumber, string pSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListSaleCenter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListSaleCenterAsync(int pAgentCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListSaleCenterZoneAccess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListSaleCenterZoneAccessAsync(int pFZoneCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChSerialTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ChSerialTicketAsync(int pSellCenterCode, long pFirstNumber, long pFinishNumber, string pSeries, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> CancelTicketAsync(long pTkSr, int TrainNumber, System.DateTime moveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetpersentReduplicate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetpersentReduplicateAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReduplicateTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ReduplicateTicketAsync(string oldTcktSr, int oldTcktNo, int Formula10, int orgFormula10, int SellerCD, int SaleCenterCD, long TcktID, long degree, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprintTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ReprintTicketAsync(int SellerCD, int SaleCenterCD, long TcktID, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTcktNopro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTcktNoproAsync(long ticID, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReduplicateHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ReduplicateHistoryAsync(long tcktId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketInfoAndRuined", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketInfoAndRuinedAsync(long Tcktid, int selCd, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RuinTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> RuinTicketAsync(long Tcktid, int selCd, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RuinTicketTotal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> RuinTicketTotalAsync(string Tcktseries, int TcktNo, int SaleCenterCD, int SaleCenterCDReg, int SellerCDReg, int WN, int SeatNu, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RuindAllTicketTotal_Hotel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.RuindAllTicketTotal_HotelResponseRuindAllTicketTotal_HotelResult> RuindAllTicketTotal_HotelAsync(int TcktNo, int SaleCenterCD, int SaleCenterCDReg, int SellerCDReg, int WN, int SeatNu, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RefundAllTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.RefundAllTicketResponseRefundAllTicketResult> RefundAllTicketAsync(int ticketNumber, int saleCenterCode, int saleCenterCodeRegister, int sellerCodeRegister, int refundAllMode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RefundTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> RefundTicketAsync(int TicketNumber, string Ticketseries, int SaleCenterCode, int RefundSaleCenterCode, int RefundSellerCode, int WagonNumber, int SeatNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoRefundTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> DoRefundTicketAsync(int TicketNumber, string TicketSeries, int SaleCenterCode, int SellerCode, int WagonNumber, int SeatNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RefundTicket2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> RefundTicket2Async(int TicketNumber, string Ticketseries, int SaleCenterCode, int RefundSaleCenterCode, int RefundSellerCode, int WagonNumber, int SeatNumber, int senderCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RefundInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> RefundInfoAsync(int TicketNumber, string Ticketseries, int SaleCenterCode, int RefundSaleCenterCode, int WagonNumber, int SeatNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RefundHotelInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> RefundHotelInfoAsync(int SaleId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RefundInfo2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> RefundInfo2Async(int TicketNumber, string Ticketseries, int SaleCenterCode, int RefundSaleCenterCode, int WagonNumber, int SeatNumber, int senderCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRefundInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRefundInfoAsync(int TicketNumber, string TicketSeries, int SaleCenterCode, int WagonNumber, int SeatNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListManagement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListManagementAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaleCenterRuniedTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterRuniedTicketAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaleCenterReportWithAnalyse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterReportWithAnalyseAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinancialReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FinancialReportAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinancialReportowner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FinancialReportownerAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinancialReportRation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FinancialReportRationAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinancialReportownerForWebservices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FinancialReportownerForWebservicesAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, int RationCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaleCenterReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterReportAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, int pFrosh, int pEbtal, int pEstrdad, int pKhsarat, int pAlmosana, int pMojada, int pReportType, string pFromSerial, string pToserial, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReportSaleHotel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ReportSaleHotelAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaleCenterReportwithowner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterReportwithownerAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, int pFrosh, int pEbtal, int pEstrdad, int pKhsarat, int pAlmosana, int pMojada, int pReportType, string pFromSerial, string pToserial, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Round", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> RoundAsync(int mny, int r, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsDamage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> IsDamageAsync(int TrainNo, int SC, int FS, int TS, int WN, int Compartment, int Seat, System.DateTime MD, int scps, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FoodMoneyDamage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> FoodMoneyDamageAsync(long Tcktid, int SellerCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DamageInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> DamageInfoAsync(int TrainNo, int SC, int FS, int TS, int WN, int Compartment, int Seat, System.DateTime MD, int scps, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotalAmontDamage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetTotalAmontDamageAsync(string listFormula, int TrainNo, int WT, int TariffCD, int TcktTypeCD, int RateCD, int FS, int TS, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFirstTicketNumberReduplicate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetFirstTicketNumberReduplicateAsync(long tckid, int SellerCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DamageTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> DamageTicketAsync(long Tcktid, int SellerCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Rupture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task RuptureAsync(string TcktSr, int TcktFrom, int TcktTo, int SellerCD, int SaleCenterCD, string Cause, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RuptureInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> RuptureInfoAsync(int FromTicketNo, int SellerCode, int SaleCenterCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LoginAsync(string Username, string Password, bool uptodate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> UpdateTokenAsync(int Usercode, string UserName, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/internetMenu", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.InternetMainMenu[]> internetMenuAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetMessageAsync(int msgType, int GroupCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EncryptTxt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> EncryptTxtAsync(string inpStr, string ky, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecryptTxt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DecryptTxtAsync(string inpStr, string ky, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> TicketExistsAsync(string tcktSr, int tcktNo, int saleCenter, int wn, int sn, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/STicketExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> STicketExistsAsync(string tcktSr, int tcktNo, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketExistsReprint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> TicketExistsReprintAsync(string TcktSr, int TcktNo, int SaleCenter, int WN, int SN, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ErrorMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ErrorMessageAsync(int ErrCD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CurDBServerTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<System.DateTime> CurDBServerTimeAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FixStr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> FixStrAsync(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListStation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListStationAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListStationClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListStationClientAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListToStationClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListToStationClientAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listprovince", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListprovinceAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertpayBankOperations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<long> insertpayBankOperationsAsync(long porderId, int pTransactionId, long pMainOrderId, int pExecutedBy, int pExecutedByAgency, string pFunctionName, string pFunctionInputParameters, string pFunctionResult, System.DateTime pDateTime, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatepayBankOperations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> updatepayBankOperationsAsync(long pOrderId, string pFunctionResult, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatepayBankOperationsAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> updatepayBankOperationsAllAsync(long pOrderId, string pFunctionResult, System.DateTime pExecutedAt, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/payBank", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> payBankAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insert_onl_pay_BankTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> insert_onl_pay_BankTransactionsAsync(int pid, int pBankId, int pSellMasterId, long pRajaOrderId, string pBankTransactionId, int pAmount, int pTransactionTypeId, long pIsSuccessfull, int pCommunicationTypeId, System.DateTime pDateTime, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/update_onl_pay_BankTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> update_onl_pay_BankTransactionsAsync(int pRajaTransactionsId, int pBankId, long pRajaOrderId, string pBankTransactionId, short pIsSuccessfull, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/update_onl_pay_BankTransactionsall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> update_onl_pay_BankTransactionsallAsync(int pRajaTransactionsId, int pBankId, long pRajaOrderId, string pBankTransactionId, short pIsSuccessfull, int pSellMasterId, int pAmount, int pTransactionTypeId, int pCommunicationTypeId, short pSettled, short pReversed, int pRefundAmount, System.DateTime pdaDateTime, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetServerTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServerTimeAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSellMaster", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> UpdateSellMasterAsync(int pSMID, int pSellMasterAmount, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InternetTicketPrint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> InternetTicketPrintAsync(int SellID, string Ids, int personRqst, int SaleCenterCD, int SellerCode, int appType, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OptionalServiceReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> OptionalServiceReportAsync(int TrainNumber, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PassengerReportForSaleCenter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PassengerReportForSaleCenterAsync(int TrainNember, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReverseOpration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task ReverseOprationAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListReverse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListReverseAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReverse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetReverseAsync(int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateReverse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task UpdateReverseAsync(int id, int DeleteCount, int IsChecked, int CheckCount, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Manifest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestAsync(int TrainNember, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManifestWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestWebAsync(decimal SystemUserID, int TrainNember, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManifestReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestReportAsync(int TrainNember, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManifestCheckLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestCheckLoginAsync(string UserName, string Password, string Mobile, string Secure, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManifestCheckLoginForSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestCheckLoginForSmsAsync(string UserName, string Password, string Mobile, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManifestListCompanyAndTrain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestListCompanyAndTrainAsync(decimal SystemUserID, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManifestGetSystemUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestGetSystemUserAsync(decimal SystemUserID, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManifestUpdateSystemUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestUpdateSystemUserAsync(decimal SystemUserID, string Password, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetLastVersionAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BankTransactionIdexists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> BankTransactionIdexistsAsync(string id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InternetMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> InternetMessageAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RationRuind", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> RationRuindAsync(int rationCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TrainWagonListHandHeld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TrainWagonListHandHeldAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PassangerListHandHeld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PassangerListHandHeldAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PassangerRailwayList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PassangerRailwayListAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TrainListHandHeld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TrainListHandHeldAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PassangerListGate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PassangerListGateAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ScheduleTrain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ScheduleTrainAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateErrorLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateErrorLogResponse> UpdateErrorLogAsync(MyApp.SvcProxy.UpdateErrorLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTicketBoss", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketBossResponse> UpdateTicketBossAsync(MyApp.SvcProxy.UpdateTicketBossRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTicketBossName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketBossNameResponse> UpdateTicketBossNameAsync(MyApp.SvcProxy.UpdateTicketBossNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertSuggestion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.InsertSuggestionResponse> InsertSuggestionAsync(MyApp.SvcProxy.InsertSuggestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTrainWagons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTrainWagonsResponse> UpdateTrainWagonsAsync(MyApp.SvcProxy.UpdateTrainWagonsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTicketV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketV2Response> UpdateTicketV2Async(MyApp.SvcProxy.UpdateTicketV2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketResponse> UpdateTicketAsync(MyApp.SvcProxy.UpdateTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BozalinUpdateV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BozalinUpdateV2Async(string DataSend, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BozalinUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.BozalinUpdateResponse> BozalinUpdateAsync(MyApp.SvcProxy.BozalinUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmsHandHeld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.SmsHandHeldResponse> SmsHandHeldAsync(MyApp.SvcProxy.SmsHandHeldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SmsHandHeldV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SmsHandHeldV2Async(string DataSend, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReSendActivationEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ReSendActivationEmailAsync(string pUsername, string Password, string Url, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHotelList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetHotelListAsync(int circularPeriod, int circularNumberSerial, int trainNumber, int wagonTypeCode, int wagonNumber, int coupeNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHotelRoomList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetHotelRoomListAsync(int hotelId, int circularWagonHotelId, System.DateTime fromDate, System.DateTime toDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHotelServiceList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetHotelServiceListAsync(int hotelId, System.DateTime fromDate, System.DateTime toDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVoucherList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetVoucherListAsync(int saleId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertHotelService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> InsertHotelServiceAsync(int ticketNumber, System.DateTime fromDate, System.DateTime toDate, int saleCenterCode, int circularWagonHotelId, int[] hotelRoomIds, int[] servicesIds, System.DateTime[] servicesDate, int[] servicesRequestCount, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketHasHotel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> TicketHasHotelAsync(int ticketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetServiceGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServiceGroupsAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchValueAddedServices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SearchValueAddedServicesAsync(string serviceSessionId, int trainNumber, int wagonTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetServices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServicesAsync(int serviceGroupId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetProvidersAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviderServices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetProviderServicesAsync(int providerId, int serviceId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProviderServiceDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetProviderServiceDetailAsync(int providerServiceId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetServedTrains", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServedTrainsAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetServedTrainProviderServices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServedTrainProviderServicesAsync(int servedTrainId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetServedTrainProviderServiceDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServedTrainProviderServiceDetailAsync(int servedTrainId, int providerServiceId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOrderAsync(int orderId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderOfTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOrderOfTicketAsync(int ticketId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOrdersAsync(System.DateTime fromDate, System.DateTime toDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOrderItemsAsync(int orderId, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/wbsLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> wbsLoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRefundCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetRefundCodeAsync(long SailID, int Row, int uID, string pPassword, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPackageData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPackageDataAsync(long TrainNumber, string Movedate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSellData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSellDataAsync(long TicketNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Pricecalculation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PricecalculationAsync(int rateCode, int TcktTypeCD, int pathCode, int fromStation, int totStation, int wagonType, System.DateTime pDate, int trainNumber, int pScps, string discountClub, int soldcount, int pRation, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCircularTrainData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetCircularTrainDataAsync(System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCircularTrains", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetCircularTrainsAsync(long CP, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketListForOwners", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketListForOwnersAsync(System.DateTime StartDate, System.DateTime EndDate, int Owners, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRuinedListForOwners", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRuinedListForOwnersAsync(System.DateTime StartDate, System.DateTime EndDate, int Owners, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketAndRuinedListForUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketAndRuinedListForUsersAsync(System.DateTime StartDate, System.DateTime EndDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketMaxId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketMaxIdAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetTicketRecordsAsync(long Id, int Count, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersonConfirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<short> PersonConfirmAsync(long SellID, short ReqCount, string[] FaName, string[] FaLastName, string[] NationalCode, string[] EnName, string[] EnLastName, string[] PassportNo, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBookingDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetBookingDetailAsync(long bookingNo, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BookingTicketConfirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> BookingTicketConfirmAsync(long bookingNo, string bankTransactionNumber, System.DateTime bankTransactionDate, int amount, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/suspendAgency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> suspendAgencyAsync(int selerCode, System.DateTime fromDate, System.DateTime toDate, string Description, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCaptcha", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetCaptchaAsync(int sellerCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCaptcha", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> CheckCaptchaAsync(int sellerCode, int captchaId, string captchaText, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockSeat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LockSeatAsync(int TrainNo, System.DateTime MoveDate, int StartStation, int ToStation, int RationCode, int WagonType, int SexCode, int SeatCount, int Degree, long SellMaster, int AppCode, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockSeat_v3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LockSeat_v3Async(int TrainNo, System.DateTime MoveDate, int StartStation, int ToStation, int RationCode, int WagonType, int SexCode, int SeatCount, int Degree, long SellMaster, int AppCode, int CapacityCompartment, int pIsExclusive, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockSeat_v4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LockSeat_v4Async(MyApp.SvcProxy.LockSeatDto[] lockSeatDtos, int captchaId, string captchaText, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAgencyMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetAgencyMessageAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTicketAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetTicketAmountAsync(long p1, long p2, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/passangerlibrary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> passangerlibraryAsync(int TicketNumber, string TicketSeries, string Username, string Password, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FreeSeatWagon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FreeSeatWagonAsync(int TrainNember, System.DateTime MoveDate, string Username, string Password, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagementCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TicketManagementCheckAsync(int BookingNo, int sellid, int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagementCheckRaja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TicketManagementCheckRajaAsync(int BookingNo, int sellid, int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagementSurveyget", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ManagementSurveyVM> TicketManagementSurveygetAsync(int fk_users, int Survey, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagementSurveypost", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> TicketManagementSurveypostAsync(MyApp.SvcProxy.ManagementSurveyVM surveyVM, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagementofferGet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ManagementofferVM> TicketManagementofferGetAsync(int fk_users, string offerText, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainWagonMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetTrainWagonMessageAsync(int pSCP, int pSCPs, int pTrainNumber, int pWagonTaype, System.DateTime pMoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagementofferpost", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> TicketManagementofferpostAsync(MyApp.SvcProxy.ManagementofferVM managementofferVM, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSell", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateSellAsync(int id, int Sellid, int reservecode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSellRaja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateSellRajaAsync(int id, int Sellid, int reservecode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagementPR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> TicketManagementPRAsync(int ManagementCode, string oldpass, string Newpass, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketManagementrajaPR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> TicketManagementrajaPRAsync(int ManagementCode, string oldpass, string Newpass, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TrainBossMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TrainBossMessageAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PassangerCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> PassangerCountAsync(System.DateTime MoveDate, int TrainNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserGateCheckingByNationalCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateCheckingByNationalCodeAsync(int UserID, string Username, string Password, string NationalCode, string Series, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserGateCheckingByNationalCode2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateCheckingByNationalCode2Async(int UserID, string Username, string Password, string NationalCode, System.DateTime MoveDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Managemetlogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementVM[]> ManagemetloginAsync(string username, string password, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManagemetloginRaja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementVM[]> ManagemetloginRajaAsync(string username, string password, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListTicketPlaning", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ListTicketPlaningResponse> ListTicketPlaningAsync(MyApp.SvcProxy.ListTicketPlaningRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListTicketPlaningraja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ListTicketPlaningrajaResponse> ListTicketPlaningrajaAsync(MyApp.SvcProxy.ListTicketPlaningrajaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListTicketPlaningTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ListTicketPlaningTPAsync(int managercode, int pagenum, int pagesize, string iMoveDate, string irequsetname, string irequsetphone, string irequsetdate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListTicketPlaningrajaTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ListTicketPlaningrajaTPAsync(int managercode, int pagenum, int pagesize, string iMoveDate, string irequsetname, string irequsetphone, string irequsetdate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListTicketPlaningSell", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM[]> ListTicketPlaningSellAsync(int managercode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListTicketPlaningSellraja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM[]> ListTicketPlaningSellrajaAsync(int managercode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateListTicketPlaning", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> updateListTicketPlaningAsync(int id, string mobileNumber, string requsetDate, string requsetName, int fromStation, int Tostation, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateListTicketPlaningraja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> updateListTicketPlaningrajaAsync(int id, string mobileNumber, string requsetDate, string requsetName, int fromStation, int Tostation, int requestCount, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManagementMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ManagementmessageVM[]> ManagementMessageAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManagementMessageraja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ManagementmessageVM[]> ManagementMessagerajaAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketPlaningFindByid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> TicketPlaningFindByidAsync(int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketPlaningFindByidRaja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> TicketPlaningFindByidRajaAsync(int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Findbyreservecode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> FindbyreservecodeAsync(int reservecode, int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Findbyreservecoderaja", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> FindbyreservecoderajaAsync(int reservecode, int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FindbyreservecodeRajaClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> FindbyreservecodeRajaClientAsync(int BookingNo, int id, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FindbyreservecoderajaMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> FindbyreservecoderajaMobileAsync(int reservecode, string Mobile, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SiteSlider", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SiteSliderAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewsSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> NewsSiteAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CivilResive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CivilResiveAsync(long NationalCode, int Birthday, System.DateTime movedate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/discountClub", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> discountClubAsync(long nin, string firstName, string lastName, int birthOfDate, System.DateTime moveDate, int SCP, int SCPS, int trainNumber, int wagonType, int ownercode, string promotionCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/discountClub2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> discountClub2Async(long nin, string firstName, string lastName, int birthOfDate, System.DateTime moveDate, int SCP, int SCPS, int trainNumber, int wagonType, int ownercode, string promotionCode, int saleCenterCode, int sellerCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StatusNationalCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> StatusNationalCodeAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDBRemainTelephonyReserve", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetDBRemainTelephonyReserveAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UrlShort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UrlShortAsync(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUrlShort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetUrlShortAsync(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserGateLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateLoginAsync(string Username, string Password, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserGateChecking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateCheckingAsync(int UserID, string Username, string Password, int Ticketid, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserGateTicketNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateTicketNumberAsync(int TicketNumber, int UserID, string Username, string Password, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TrainBoss", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task TrainBossAsync(long TicketId, int isChecked, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListSmsAsync(string companyWhere, string selectCountLimit, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task UpdateSmsAsync(long ID, string Jsonstring, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListFPSSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListFPSSmsAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFPSSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task UpdateFPSSmsAsync(long ID, string Jsonstring, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendFPSSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task SendFPSSmsAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSmsCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task SendSmsCompanyAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pathList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> pathListAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPathStation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPathStationAsync(int PathCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sexList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> sexListAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DBClientVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DBClientVersionAsync(string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PrintType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> PrintTypeAsync(int pSaleCenterCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OwnerallowforRuind", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> OwnerallowforRuindAsync(int pSaleCenterCode, int WT, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ownerallowforreduplicate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> OwnerallowforreduplicateAsync(int pSaleCenterCode, int WT, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OwnerallowforDamage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> OwnerallowforDamageAsync(int pSaleCenterCode, int WT, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Webaddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WebaddressAsync(int pSaleCenterCode, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INTNWebaddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> INTNWebaddressAsync(int pSaleCenterCode, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MaxDailyBuying", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> MaxDailyBuyingAsync(System.DateTime MD, int AgentCD, int SellerCD, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewPriceTicketWithFood", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ViewPriceTicketWithFoodAsync(int rateCode, int tariffCode, int TcktTypeCD, int pathCode, int fromStation, int totStation, int wagonType, System.DateTime pDate, int trainNumber, int pscps, decimal discountClub, int psoldcount, int pration, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWagonAvaliableSeatCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonAvaliableSeatCountAsync(int FromStation, int ToStation, System.DateTime MD, int RationCode, int SexCode, int duration, int TarifCode, int TicketType, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWagonAvaliableSeatCountWithRationArray", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonAvaliableSeatCountWithRationArrayAsync(int FromStation, int ToStation, System.DateTime MD, int[] RationCode, int SexCode, int duration, int TarifCode, int TicketType, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWagonAvaliableSeatCountwithIp3WithRationArrayRailWayEdari", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonAvaliableSeatCountwithIp3WithRationArrayRailWayEdariAsync(int FromStation, int ToStation, System.DateTime MD, int[] RationCode, int SexCode, int duration, int TarifCode, int TicketType, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketReportRow7", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> TicketReportRow7Async(int CompanyCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> InsertUsersAsync(
                    string pUsername, 
                    string pPassword, 
                    string pEmail, 
                    string pName, 
                    string pFamily, 
                    string pNationalCode, 
                    int pSex, 
                    int pprovince, 
                    string pCity, 
                    string paddress, 
                    string pTelNumber, 
                    string pTelNumber1, 
                    string pFax, 
                    int pSaleCenterCode, 
                    string Url, 
                    string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActiveUserBySMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<short> ActiveUserBySMSAsync(string nationCode, string activeCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> UpdateUsersAsync(int pUserCode, int pprovince, string pCity, string pTelNumber, string pTelNumber1, string pFax, string Paddress, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActivationUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ActivationUsersAsync(string HashCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DelayAsync(int DelayInSeconds, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserSellReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UserSellReportResponse> UserSellReportAsync(MyApp.SvcProxy.UserSellReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IntroducerSellReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> IntroducerSellReportAsync(int pSaleCenterCode, int pUserCode, System.DateTime FromDate, System.DateTime ToDate, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserSellDetailReport2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserSellDetailReport2Async(int appcode, long sailID, int pUserCode, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserSellDetailReport2_GUID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserSellDetailReport2_GUIDAsync(int appcode, long sailID, int pUserCode, string serviceSessionId, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ChangePasswordAsync(int SaleCenterCode, string UserName, string OldPassWord, string NewPassWord, string Checksum, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ResetPasswordAsync(string NationalCode, string UserName, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResendIntenetAccountInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> ResendIntenetAccountInfoAsync(string NationalCode, string PhoneNumber, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NameUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> NameUpdateAsync(long TicketId, string Name, string Family, string serviceSessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTrainList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainListAsync(int FromStation, int ToStation, System.DateTime fromDate, int duration, int RationCode, int SexCode, string Checksum, string serviceSessionId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ManagementmessageVM
    {
        
        private int idField;
        
        private string messageField;
        
        private System.DateTime fromdateField;
        
        private System.DateTime todateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime fromdate
        {
            get
            {
                return this.fromdateField;
            }
            set
            {
                this.fromdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime todate
        {
            get
            {
                return this.todateField;
            }
            set
            {
                this.todateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OnlManagementticketplanningVM
    {
        
        private int idField;
        
        private System.Nullable<int> managercodeField;
        
        private System.Nullable<int> scheduleidField;
        
        private System.Nullable<int> scpField;
        
        private System.DateTime movedateField;
        
        private System.Nullable<int> pathcodeField;
        
        private System.Nullable<int> rationcodeField;
        
        private System.Nullable<int> reservecodeField;
        
        private System.Nullable<bool> confirmField;
        
        private System.Nullable<bool> issellField;
        
        private System.DateTime validdateField;
        
        private System.DateTime validtimeField;
        
        private string mobilenumberField;
        
        private System.Nullable<System.DateTime> requsetdateField;
        
        private string requsetnameField;
        
        private int startStationField;
        
        private int endStationField;
        
        private string startStationNameField;
        
        private string endStationNameField;
        
        private string smstextField;
        
        private int statusField;
        
        private int requestcountField;
        
        private int returnForceDayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<int> managercode
        {
            get
            {
                return this.managercodeField;
            }
            set
            {
                this.managercodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<int> scheduleid
        {
            get
            {
                return this.scheduleidField;
            }
            set
            {
                this.scheduleidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<int> scp
        {
            get
            {
                return this.scpField;
            }
            set
            {
                this.scpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime movedate
        {
            get
            {
                return this.movedateField;
            }
            set
            {
                this.movedateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<int> pathcode
        {
            get
            {
                return this.pathcodeField;
            }
            set
            {
                this.pathcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<int> rationcode
        {
            get
            {
                return this.rationcodeField;
            }
            set
            {
                this.rationcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<int> reservecode
        {
            get
            {
                return this.reservecodeField;
            }
            set
            {
                this.reservecodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<bool> confirm
        {
            get
            {
                return this.confirmField;
            }
            set
            {
                this.confirmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<bool> issell
        {
            get
            {
                return this.issellField;
            }
            set
            {
                this.issellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime validdate
        {
            get
            {
                return this.validdateField;
            }
            set
            {
                this.validdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime validtime
        {
            get
            {
                return this.validtimeField;
            }
            set
            {
                this.validtimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string mobilenumber
        {
            get
            {
                return this.mobilenumberField;
            }
            set
            {
                this.mobilenumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
        public System.Nullable<System.DateTime> requsetdate
        {
            get
            {
                return this.requsetdateField;
            }
            set
            {
                this.requsetdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string requsetname
        {
            get
            {
                return this.requsetnameField;
            }
            set
            {
                this.requsetnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public int StartStation
        {
            get
            {
                return this.startStationField;
            }
            set
            {
                this.startStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public int EndStation
        {
            get
            {
                return this.endStationField;
            }
            set
            {
                this.endStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string StartStationName
        {
            get
            {
                return this.startStationNameField;
            }
            set
            {
                this.startStationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string EndStationName
        {
            get
            {
                return this.endStationNameField;
            }
            set
            {
                this.endStationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string smstext
        {
            get
            {
                return this.smstextField;
            }
            set
            {
                this.smstextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public int status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public int requestcount
        {
            get
            {
                return this.requestcountField;
            }
            set
            {
                this.requestcountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public int ReturnForceDay
        {
            get
            {
                return this.returnForceDayField;
            }
            set
            {
                this.returnForceDayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OnlManagementVM
    {
        
        private int codeField;
        
        private string descriptionField;
        
        private string description1Field;
        
        private string nameField;
        
        private string passwordField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string description1
        {
            get
            {
                return this.description1Field;
            }
            set
            {
                this.description1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ManagementofferVM
    {
        
        private int fk_usercodeField;
        
        private string offertextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int fk_usercode
        {
            get
            {
                return this.fk_usercodeField;
            }
            set
            {
                this.fk_usercodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string offertext
        {
            get
            {
                return this.offertextField;
            }
            set
            {
                this.offertextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ManagementSurveyVM
    {
        
        private int fk_usercodeField;
        
        private int statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int fk_usercode
        {
            get
            {
                return this.fk_usercodeField;
            }
            set
            {
                this.fk_usercodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LockSeatDto
    {
        
        private int trainNoField;
        
        private System.DateTime moveDateField;
        
        private int startStationField;
        
        private int toStationField;
        
        private int rationCodeField;
        
        private int wagonTypeField;
        
        private int sexCodeField;
        
        private int seatCountField;
        
        private int degreeField;
        
        private int appCodeField;
        
        private int capacityCompartmentField;
        
        private int pIsExclusiveField;
        
        private string checksumField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int TrainNo
        {
            get
            {
                return this.trainNoField;
            }
            set
            {
                this.trainNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime MoveDate
        {
            get
            {
                return this.moveDateField;
            }
            set
            {
                this.moveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int StartStation
        {
            get
            {
                return this.startStationField;
            }
            set
            {
                this.startStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int ToStation
        {
            get
            {
                return this.toStationField;
            }
            set
            {
                this.toStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int RationCode
        {
            get
            {
                return this.rationCodeField;
            }
            set
            {
                this.rationCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int WagonType
        {
            get
            {
                return this.wagonTypeField;
            }
            set
            {
                this.wagonTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int SexCode
        {
            get
            {
                return this.sexCodeField;
            }
            set
            {
                this.sexCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int SeatCount
        {
            get
            {
                return this.seatCountField;
            }
            set
            {
                this.seatCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int Degree
        {
            get
            {
                return this.degreeField;
            }
            set
            {
                this.degreeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int AppCode
        {
            get
            {
                return this.appCodeField;
            }
            set
            {
                this.appCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int CapacityCompartment
        {
            get
            {
                return this.capacityCompartmentField;
            }
            set
            {
                this.capacityCompartmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public int pIsExclusive
        {
            get
            {
                return this.pIsExclusiveField;
            }
            set
            {
                this.pIsExclusiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Checksum
        {
            get
            {
                return this.checksumField;
            }
            set
            {
                this.checksumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InternetMainMenu
    {
        
        private long idField;
        
        private string parentCodeField;
        
        private string addcodeField;
        
        private string titleField;
        
        private string urlField;
        
        private int sortOrderField;
        
        private int levelField;
        
        private string actionField;
        
        private string controllerField;
        
        private string roleField;
        
        private int colField;
        
        private string commentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string parentCode
        {
            get
            {
                return this.parentCodeField;
            }
            set
            {
                this.parentCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Addcode
        {
            get
            {
                return this.addcodeField;
            }
            set
            {
                this.addcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int SortOrder
        {
            get
            {
                return this.sortOrderField;
            }
            set
            {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int Level
        {
            get
            {
                return this.levelField;
            }
            set
            {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string action
        {
            get
            {
                return this.actionField;
            }
            set
            {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string controller
        {
            get
            {
                return this.controllerField;
            }
            set
            {
                this.controllerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string role
        {
            get
            {
                return this.roleField;
            }
            set
            {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int col
        {
            get
            {
                return this.colField;
            }
            set
            {
                this.colField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string comment
        {
            get
            {
                return this.commentField;
            }
            set
            {
                this.commentField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string fileName;
        
        public DownloadFileRequest()
        {
        }
        
        public DownloadFileRequest(string fileName)
        {
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFileResult;
        
        public DownloadFileResponse()
        {
        }
        
        public DownloadFileResponse(byte[] DownloadFileResult)
        {
            this.DownloadFileResult = DownloadFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string serviceSessionId;
        
        public UploadFileRequest()
        {
        }
        
        public UploadFileRequest(byte[] fs, string fileName, string serviceSessionId)
        {
            this.fs = fs;
            this.fileName = fileName;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadFileResult;
        
        public UploadFileResponse()
        {
        }
        
        public UploadFileResponse(string UploadFileResult)
        {
            this.UploadFileResult = UploadFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTickets", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateTicketsRequest()
        {
        }
        
        public UpdateTicketsRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateTicketsResult;
        
        public UpdateTicketsResponse()
        {
        }
        
        public UpdateTicketsResponse(string UpdateTicketsResult)
        {
            this.UpdateTicketsResult = UpdateTicketsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateWagons", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateWagonsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateWagonsRequest()
        {
        }
        
        public UpdateWagonsRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateWagonsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateWagonsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateWagonsResult;
        
        public UpdateWagonsResponse()
        {
        }
        
        public UpdateWagonsResponse(string UpdateWagonsResult)
        {
            this.UpdateWagonsResult = UpdateWagonsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePayData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePayDataRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdatePayDataRequest()
        {
        }
        
        public UpdatePayDataRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePayDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePayDataResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdatePayDataResult;
        
        public UpdatePayDataResponse()
        {
        }
        
        public UpdatePayDataResponse(string UpdatePayDataResult)
        {
            this.UpdatePayDataResult = UpdatePayDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSuggestions", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSuggestionsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateSuggestionsRequest()
        {
        }
        
        public UpdateSuggestionsRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSuggestionsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSuggestionsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateSuggestionsResult;
        
        public UpdateSuggestionsResponse()
        {
        }
        
        public UpdateSuggestionsResponse(string UpdateSuggestionsResult)
        {
            this.UpdateSuggestionsResult = UpdateSuggestionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateErrorLogs", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateErrorLogsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateErrorLogsRequest()
        {
        }
        
        public UpdateErrorLogsRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateErrorLogsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateErrorLogsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateErrorLogsResult;
        
        public UpdateErrorLogsResponse()
        {
        }
        
        public UpdateErrorLogsResponse(string UpdateErrorLogsResult)
        {
            this.UpdateErrorLogsResult = UpdateErrorLogsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTicketListByWagonUic", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTicketListByWagonUicRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> trainNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int fromUicWagon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int toUicWagon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime fromMoveDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime toMoveDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string serviceSessionId;
        
        public GetTicketListByWagonUicRequest()
        {
        }
        
        public GetTicketListByWagonUicRequest(System.Nullable<int> trainNumber, int fromUicWagon, int toUicWagon, System.DateTime fromMoveDate, System.DateTime toMoveDate, string serviceSessionId)
        {
            this.trainNumber = trainNumber;
            this.fromUicWagon = fromUicWagon;
            this.toUicWagon = toUicWagon;
            this.fromMoveDate = fromMoveDate;
            this.toMoveDate = toMoveDate;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTicketListByWagonUicResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTicketListByWagonUicResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public MyApp.SvcProxy.ArrayOfXElement GetTicketListByWagonUicResult;
        
        public GetTicketListByWagonUicResponse()
        {
        }
        
        public GetTicketListByWagonUicResponse(MyApp.SvcProxy.ArrayOfXElement GetTicketListByWagonUicResult)
        {
            this.GetTicketListByWagonUicResult = GetTicketListByWagonUicResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterTiket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterTiketRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int SellId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] cName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] CFamily;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] NationalCD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string Tel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int[] tcktType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int[] tariff;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfInt")]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false, NestingLevel=1)]
        public int[][] Srvcs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string[] personel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public string[] OrderNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string[] TicketNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int[] Food;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public int[] birthDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string[] promotionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public int charter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public int appcode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public string Checksum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public string serviceSessionId;
        
        public RegisterTiketRequest()
        {
        }
        
        public RegisterTiketRequest(
                    int SellId, 
                    string[] cName, 
                    string[] CFamily, 
                    string[] NationalCD, 
                    string Tel, 
                    int[] tcktType, 
                    int[] tariff, 
                    int[][] Srvcs, 
                    string[] personel, 
                    string[] OrderNumber, 
                    string[] TicketNumber, 
                    int[] Food, 
                    int[] birthDate, 
                    string[] promotionCode, 
                    int charter, 
                    int appcode, 
                    string Checksum, 
                    string serviceSessionId)
        {
            this.SellId = SellId;
            this.cName = cName;
            this.CFamily = CFamily;
            this.NationalCD = NationalCD;
            this.Tel = Tel;
            this.tcktType = tcktType;
            this.tariff = tariff;
            this.Srvcs = Srvcs;
            this.personel = personel;
            this.OrderNumber = OrderNumber;
            this.TicketNumber = TicketNumber;
            this.Food = Food;
            this.birthDate = birthDate;
            this.promotionCode = promotionCode;
            this.charter = charter;
            this.appcode = appcode;
            this.Checksum = Checksum;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterTiketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterTiketResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int RegisterTiketResult;
        
        public RegisterTiketResponse()
        {
        }
        
        public RegisterTiketResponse(int RegisterTiketResult)
        {
            this.RegisterTiketResult = RegisterTiketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterTiket_V3", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterTiket_V3Request
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int SellId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] cName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] CFamily;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] NationalCD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string Tel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int[] tcktType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int[] tariff;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfInt")]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false, NestingLevel=1)]
        public int[][] Srvcs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string[] personel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public string[] OrderNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string[] TicketNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int[] Food;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public int[] birthDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string[] promotionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public decimal PercentDiscount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public int charter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public int appcode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public int BankID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public string Checksum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=19)]
        public string serviceSessionId;
        
        public RegisterTiket_V3Request()
        {
        }
        
        public RegisterTiket_V3Request(
                    int SellId, 
                    string[] cName, 
                    string[] CFamily, 
                    string[] NationalCD, 
                    string Tel, 
                    int[] tcktType, 
                    int[] tariff, 
                    int[][] Srvcs, 
                    string[] personel, 
                    string[] OrderNumber, 
                    string[] TicketNumber, 
                    int[] Food, 
                    int[] birthDate, 
                    string[] promotionCode, 
                    decimal PercentDiscount, 
                    int charter, 
                    int appcode, 
                    int BankID, 
                    string Checksum, 
                    string serviceSessionId)
        {
            this.SellId = SellId;
            this.cName = cName;
            this.CFamily = CFamily;
            this.NationalCD = NationalCD;
            this.Tel = Tel;
            this.tcktType = tcktType;
            this.tariff = tariff;
            this.Srvcs = Srvcs;
            this.personel = personel;
            this.OrderNumber = OrderNumber;
            this.TicketNumber = TicketNumber;
            this.Food = Food;
            this.birthDate = birthDate;
            this.promotionCode = promotionCode;
            this.PercentDiscount = PercentDiscount;
            this.charter = charter;
            this.appcode = appcode;
            this.BankID = BankID;
            this.Checksum = Checksum;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterTiket_V3Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterTiket_V3Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int RegisterTiket_V3Result;
        
        public RegisterTiket_V3Response()
        {
        }
        
        public RegisterTiket_V3Response(int RegisterTiket_V3Result)
        {
            this.RegisterTiket_V3Result = RegisterTiket_V3Result;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class RuindAllTicketTotal_HotelResponseRuindAllTicketTotal_HotelResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class RefundAllTicketResponseRefundAllTicketResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateErrorLog", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateErrorLogRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateErrorLogRequest()
        {
        }
        
        public UpdateErrorLogRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateErrorLogResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateErrorLogResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateErrorLogResult;
        
        public UpdateErrorLogResponse()
        {
        }
        
        public UpdateErrorLogResponse(string UpdateErrorLogResult)
        {
            this.UpdateErrorLogResult = UpdateErrorLogResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketBoss", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketBossRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateTicketBossRequest()
        {
        }
        
        public UpdateTicketBossRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketBossResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketBossResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateTicketBossResult;
        
        public UpdateTicketBossResponse()
        {
        }
        
        public UpdateTicketBossResponse(string UpdateTicketBossResult)
        {
            this.UpdateTicketBossResult = UpdateTicketBossResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketBossName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketBossNameRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateTicketBossNameRequest()
        {
        }
        
        public UpdateTicketBossNameRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketBossNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketBossNameResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateTicketBossNameResult;
        
        public UpdateTicketBossNameResponse()
        {
        }
        
        public UpdateTicketBossNameResponse(string UpdateTicketBossNameResult)
        {
            this.UpdateTicketBossNameResult = UpdateTicketBossNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertSuggestion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertSuggestionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public InsertSuggestionRequest()
        {
        }
        
        public InsertSuggestionRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertSuggestionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertSuggestionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string InsertSuggestionResult;
        
        public InsertSuggestionResponse()
        {
        }
        
        public InsertSuggestionResponse(string InsertSuggestionResult)
        {
            this.InsertSuggestionResult = InsertSuggestionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTrainWagons", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTrainWagonsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateTrainWagonsRequest()
        {
        }
        
        public UpdateTrainWagonsRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTrainWagonsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTrainWagonsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateTrainWagonsResult;
        
        public UpdateTrainWagonsResponse()
        {
        }
        
        public UpdateTrainWagonsResponse(string UpdateTrainWagonsResult)
        {
            this.UpdateTrainWagonsResult = UpdateTrainWagonsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketV2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketV2Request
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateTicketV2Request()
        {
        }
        
        public UpdateTicketV2Request(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketV2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketV2Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateTicketV2Result;
        
        public UpdateTicketV2Response()
        {
        }
        
        public UpdateTicketV2Response(string UpdateTicketV2Result)
        {
            this.UpdateTicketV2Result = UpdateTicketV2Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public UpdateTicketRequest()
        {
        }
        
        public UpdateTicketRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateTicketResult;
        
        public UpdateTicketResponse()
        {
        }
        
        public UpdateTicketResponse(string UpdateTicketResult)
        {
            this.UpdateTicketResult = UpdateTicketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BozalinUpdate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BozalinUpdateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public BozalinUpdateRequest()
        {
        }
        
        public BozalinUpdateRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BozalinUpdateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BozalinUpdateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string BozalinUpdateResult;
        
        public BozalinUpdateResponse()
        {
        }
        
        public BozalinUpdateResponse(string BozalinUpdateResult)
        {
            this.BozalinUpdateResult = BozalinUpdateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SmsHandHeld", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SmsHandHeldRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataSend;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceSessionId;
        
        public SmsHandHeldRequest()
        {
        }
        
        public SmsHandHeldRequest(byte[] DataSend, string serviceSessionId)
        {
            this.DataSend = DataSend;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SmsHandHeldResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SmsHandHeldResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SmsHandHeldResult;
        
        public SmsHandHeldResponse()
        {
        }
        
        public SmsHandHeldResponse(bool SmsHandHeldResult)
        {
            this.SmsHandHeldResult = SmsHandHeldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListTicketPlaning", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ListTicketPlaningRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int managercode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pagenum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pagesize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string iMoveDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string irequsetname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string irequsetphone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string irequsetdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfInt")]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false, NestingLevel=1)]
        public int[][] sorttype;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string serviceSessionId;
        
        public ListTicketPlaningRequest()
        {
        }
        
        public ListTicketPlaningRequest(int managercode, int pagenum, int pagesize, string iMoveDate, string irequsetname, string irequsetphone, string irequsetdate, int[][] sorttype, string serviceSessionId)
        {
            this.managercode = managercode;
            this.pagenum = pagenum;
            this.pagesize = pagesize;
            this.iMoveDate = iMoveDate;
            this.irequsetname = irequsetname;
            this.irequsetphone = irequsetphone;
            this.irequsetdate = irequsetdate;
            this.sorttype = sorttype;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListTicketPlaningResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ListTicketPlaningResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public MyApp.SvcProxy.OnlManagementticketplanningVM[] ListTicketPlaningResult;
        
        public ListTicketPlaningResponse()
        {
        }
        
        public ListTicketPlaningResponse(MyApp.SvcProxy.OnlManagementticketplanningVM[] ListTicketPlaningResult)
        {
            this.ListTicketPlaningResult = ListTicketPlaningResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListTicketPlaningraja", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ListTicketPlaningrajaRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int managercode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pagenum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pagesize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string iMoveDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string irequsetname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string irequsetphone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string irequsetdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfInt")]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false, NestingLevel=1)]
        public int[][] sorttype;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string serviceSessionId;
        
        public ListTicketPlaningrajaRequest()
        {
        }
        
        public ListTicketPlaningrajaRequest(int managercode, int pagenum, int pagesize, string iMoveDate, string irequsetname, string irequsetphone, string irequsetdate, int[][] sorttype, string serviceSessionId)
        {
            this.managercode = managercode;
            this.pagenum = pagenum;
            this.pagesize = pagesize;
            this.iMoveDate = iMoveDate;
            this.irequsetname = irequsetname;
            this.irequsetphone = irequsetphone;
            this.irequsetdate = irequsetdate;
            this.sorttype = sorttype;
            this.serviceSessionId = serviceSessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListTicketPlaningrajaResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ListTicketPlaningrajaResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public MyApp.SvcProxy.OnlManagementticketplanningVM[] ListTicketPlaningrajaResult;
        
        public ListTicketPlaningrajaResponse()
        {
        }
        
        public ListTicketPlaningrajaResponse(MyApp.SvcProxy.OnlManagementticketplanningVM[] ListTicketPlaningrajaResult)
        {
            this.ListTicketPlaningrajaResult = ListTicketPlaningrajaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserSellReport", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserSellReportRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int pSaleCenterCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pUserCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string serviceSessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> pFromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> pToDate;
        
        public UserSellReportRequest()
        {
        }
        
        public UserSellReportRequest(int pSaleCenterCode, int pUserCode, string serviceSessionId, System.Nullable<System.DateTime> pFromDate, System.Nullable<System.DateTime> pToDate)
        {
            this.pSaleCenterCode = pSaleCenterCode;
            this.pUserCode = pUserCode;
            this.serviceSessionId = serviceSessionId;
            this.pFromDate = pFromDate;
            this.pToDate = pToDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserSellReportResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserSellReportResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public MyApp.SvcProxy.ArrayOfXElement UserSellReportResult;
        
        public UserSellReportResponse()
        {
        }
        
        public UserSellReportResponse(MyApp.SvcProxy.ArrayOfXElement UserSellReportResult)
        {
            this.UserSellReportResult = UserSellReportResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface Online2ServicesSoapChannel : MyApp.SvcProxy.Online2ServicesSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class Online2ServicesSoapClient : System.ServiceModel.ClientBase<MyApp.SvcProxy.Online2ServicesSoap>, MyApp.SvcProxy.Online2ServicesSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Online2ServicesSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(Online2ServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), Online2ServicesSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Online2ServicesSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Online2ServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Online2ServicesSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Online2ServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Online2ServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<int> TransactionVSTicketAsync(System.DateTime fromDate, System.DateTime todate, string serviceSessionId)
        {
            return base.Channel.TransactionVSTicketAsync(fromDate, todate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> trainbossAsync(string serviceSessionId)
        {
            return base.Channel.trainbossAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ResultAdySeatDatasetAsync(int Trainnumber, System.DateTime Tripdate, int State_id, string serviceSessionId)
        {
            return base.Channel.ResultAdySeatDatasetAsync(Trainnumber, Tripdate, State_id, serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.DownloadFileResponse> MyApp.SvcProxy.Online2ServicesSoap.DownloadFileAsync(MyApp.SvcProxy.DownloadFileRequest request)
        {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.DownloadFileResponse> DownloadFileAsync(string fileName)
        {
            MyApp.SvcProxy.DownloadFileRequest inValue = new MyApp.SvcProxy.DownloadFileRequest();
            inValue.fileName = fileName;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).DownloadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UploadFileResponse> MyApp.SvcProxy.Online2ServicesSoap.UploadFileAsync(MyApp.SvcProxy.UploadFileRequest request)
        {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UploadFileResponse> UploadFileAsync(byte[] fs, string fileName, string serviceSessionId)
        {
            MyApp.SvcProxy.UploadFileRequest inValue = new MyApp.SvcProxy.UploadFileRequest();
            inValue.fs = fs;
            inValue.fileName = fileName;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UploadFileAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetListFileAsync()
        {
            return base.Channel.GetListFileAsync();
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CauseInactiveAsync(int selercode, string serviceSessionId)
        {
            return base.Channel.CauseInactiveAsync(selercode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPayBankTransactionInfoAsync(int id, string serviceSessionId)
        {
            return base.Channel.GetPayBankTransactionInfoAsync(id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPayBankOperationInfoAsync(int id, string serviceSessionId)
        {
            return base.Channel.GetPayBankOperationInfoAsync(id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> SetPayBankSettledAsync(int TransActionid, int upValue, string serviceSessionId)
        {
            return base.Channel.SetPayBankSettledAsync(TransActionid, upValue, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> SetPayBankReversedAsync(int TransActionid, int upValue, string serviceSessionId)
        {
            return base.Channel.SetPayBankReversedAsync(TransActionid, upValue, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> addPayBankRefundAmountAsync(int TransActionid, int amount, string serviceSessionId)
        {
            return base.Channel.addPayBankRefundAmountAsync(TransActionid, amount, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<long> TicketAmountBySMCodeAsync(int SMCODE, string serviceSessionId)
        {
            return base.Channel.TicketAmountBySMCodeAsync(SMCODE, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPathAsync(string serviceSessionId)
        {
            return base.Channel.GetPathAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTotalSeatTicketAsync(int pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.GetTotalSeatTicketAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonListTrianAsync(int pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.GetWagonListTrianAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetStationListTrianAsync(int pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.GetStationListTrianAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<long> getUserCreditAsync(int pSC, int pUserCode, string serviceSessionId)
        {
            return base.Channel.getUserCreditAsync(pSC, pUserCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<long> CreditTransactionAsync(int pType, int pSC, int pUser, int pAmount, int pRefCode, string serviceSessionId)
        {
            return base.Channel.CreditTransactionAsync(pType, pSC, pUser, pAmount, pRefCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CreditReportAsync(int pSC, int pUserCode, string serviceSessionId)
        {
            return base.Channel.CreditReportAsync(pSC, pUserCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PersonRailwaysAsync(int perscode, string serviceSessionId)
        {
            return base.Channel.PersonRailwaysAsync(perscode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PersonRailwaysPostAsync(int perscode, int pSellSerial, string serviceSessionId)
        {
            return base.Channel.PersonRailwaysPostAsync(perscode, pSellSerial, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> RollBackBilitAsync(int pTicketNumber, string pTicketSeries, string serviceSessionId)
        {
            return base.Channel.RollBackBilitAsync(pTicketNumber, pTicketSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> RaiStockServiceAsync(
                    ushort CustomerCode, 
                    string ContactNumber, 
                    string ContactDate, 
                    string BillDate, 
                    string BillNumber, 
                    string fromDate, 
                    string toDate, 
                    string Desc, 
                    long p1, 
                    long p2, 
                    long p3, 
                    long p4, 
                    long p5, 
                    long p6, 
                    long p7, 
                    long p8, 
                    string serviceSessionId)
        {
            return base.Channel.RaiStockServiceAsync(CustomerCode, ContactNumber, ContactDate, BillDate, BillNumber, fromDate, toDate, Desc, p1, p2, p3, p4, p5, p6, p7, p8, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> RaiDataserviceAsync(ushort CustomerCode, string ContactNumber, string ContactDate, string BillNumber, string fromDate, string toDate, string p1, string p2, string p3, string p4, string F4, string RouindDamage, string FoodCost, string FormulaSubsidy, string serviceSessionId)
        {
            return base.Channel.RaiDataserviceAsync(CustomerCode, ContactNumber, ContactDate, BillNumber, fromDate, toDate, p1, p2, p3, p4, F4, RouindDamage, FoodCost, FormulaSubsidy, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetInformationTrainAsync(int TrainNumber, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.GetInformationTrainAsync(TrainNumber, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainBossBozalinAsync(int TrainBossPersCode, System.DateTime FromDate, System.DateTime ToDate, string serviceSessionId)
        {
            return base.Channel.GetTrainBossBozalinAsync(TrainBossPersCode, FromDate, ToDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPriceTrainAsync(int TrainNumber, int WagonNumber, int FromStation, int ToStation, int CircularPeriod, int CircularNumberSerial, string serviceSessionId)
        {
            return base.Channel.GetPriceTrainAsync(TrainNumber, WagonNumber, FromStation, ToStation, CircularPeriod, CircularNumberSerial, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetStationConnectionAsync(string serviceSessionId)
        {
            return base.Channel.GetStationConnectionAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainConnectionListAsync(int FromStation, int EndStation, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.GetTrainConnectionListAsync(FromStation, EndStation, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetListExcursionAsync(string serviceSessionId)
        {
            return base.Channel.GetListExcursionAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSaleSystemParametersAsync(string serviceSessionId)
        {
            return base.Channel.GetSaleSystemParametersAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> UpdateBarcodeCheckLogAsync(string DataSend, string serviceSessionId)
        {
            return base.Channel.UpdateBarcodeCheckLogAsync(DataSend, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> DlgTrainPriceHandHeldListAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.DlgTrainPriceHandHeldListAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSaleInfoAsync(int SaleId, string serviceSessionId)
        {
            return base.Channel.GetSaleInfoAsync(SaleId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetFreePassengerServicesAsync(int circularPeriod, int circularNumberSerial, int trainNumber, int startStationCode, int endStationCode, string serviceSessionId)
        {
            return base.Channel.GetFreePassengerServicesAsync(circularPeriod, circularNumberSerial, trainNumber, startStationCode, endStationCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> TicketHasFPSAsync(int ticketNumber, int ticketSeries, string serviceSessionId)
        {
            return base.Channel.TicketHasFPSAsync(ticketNumber, ticketSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LanguageAsync(string serviceSessionId)
        {
            return base.Channel.LanguageAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> GetDataBarCodeAsync(string BarcodeText, string serviceSessionId)
        {
            return base.Channel.GetDataBarCodeAsync(BarcodeText, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketTypeInfoByTicketNumberAsync(int ticketNumber, int ticketSeries, string serviceSessionId)
        {
            return base.Channel.GetTicketTypeInfoByTicketNumberAsync(ticketNumber, ticketSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> GetTicketOwnerAsync(int ticketNumber, string serviceSessionId)
        {
            return base.Channel.GetTicketOwnerAsync(ticketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> GetSaleCenterAllowCompanyDescriptionAsync(int saleCenterCode, int companyCode, string serviceSessionId)
        {
            return base.Channel.GetSaleCenterAllowCompanyDescriptionAsync(saleCenterCode, companyCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> GetSaleCenterAllowCompanyDescription2Async(int saleCenterCode, int circularPeriod, int circularNumberSerial, string serviceSessionId)
        {
            return base.Channel.GetSaleCenterAllowCompanyDescription2Async(saleCenterCode, circularPeriod, circularNumberSerial, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CheckCoronaStatusAsync(string[] nationalCodes, string serviceSessionId)
        {
            return base.Channel.CheckCoronaStatusAsync(nationalCodes, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CheckCoronaStatusOmidAsync(string[] nationalCodes, int startStation, int endStation, int wagonType, int trainNumber, System.DateTime moveDate, string serviceSessionId)
        {
            return base.Channel.CheckCoronaStatusOmidAsync(nationalCodes, startStation, endStation, wagonType, trainNumber, moveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> AllowRegisterCoronaOmidAsync(string[] nationalCodes, int startStation, int endStation, int wagonType, int trainNumber, System.DateTime moveDate, string serviceSessionId)
        {
            return base.Channel.AllowRegisterCoronaOmidAsync(nationalCodes, startStation, endStation, wagonType, trainNumber, moveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainInfoAsync(System.DateTime moveDate, int trainNumber, int reportType, string serviceSessionId)
        {
            return base.Channel.GetTrainInfoAsync(moveDate, trainNumber, reportType, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketByWagonUicReportAsync(string uicWagon, System.DateTime fromMoveDate, System.DateTime toMoveDate, int trainNumber, string serviceSessionId)
        {
            return base.Channel.GetTicketByWagonUicReportAsync(uicWagon, fromMoveDate, toMoveDate, trainNumber, serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketsResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateTicketsAsync(MyApp.SvcProxy.UpdateTicketsRequest request)
        {
            return base.Channel.UpdateTicketsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketsResponse> UpdateTicketsAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateTicketsRequest inValue = new MyApp.SvcProxy.UpdateTicketsRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateTicketsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateWagonsResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateWagonsAsync(MyApp.SvcProxy.UpdateWagonsRequest request)
        {
            return base.Channel.UpdateWagonsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateWagonsResponse> UpdateWagonsAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateWagonsRequest inValue = new MyApp.SvcProxy.UpdateWagonsRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateWagonsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdatePayDataResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdatePayDataAsync(MyApp.SvcProxy.UpdatePayDataRequest request)
        {
            return base.Channel.UpdatePayDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdatePayDataResponse> UpdatePayDataAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdatePayDataRequest inValue = new MyApp.SvcProxy.UpdatePayDataRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdatePayDataAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string> UpdateBozalinsAsync(string DataSend, string serviceSessionId)
        {
            return base.Channel.UpdateBozalinsAsync(DataSend, serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateSuggestionsResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateSuggestionsAsync(MyApp.SvcProxy.UpdateSuggestionsRequest request)
        {
            return base.Channel.UpdateSuggestionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateSuggestionsResponse> UpdateSuggestionsAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateSuggestionsRequest inValue = new MyApp.SvcProxy.UpdateSuggestionsRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateSuggestionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateErrorLogsResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateErrorLogsAsync(MyApp.SvcProxy.UpdateErrorLogsRequest request)
        {
            return base.Channel.UpdateErrorLogsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateErrorLogsResponse> UpdateErrorLogsAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateErrorLogsRequest inValue = new MyApp.SvcProxy.UpdateErrorLogsRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateErrorLogsAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSMCodeAsync(long saleID, string serviceSessionId)
        {
            return base.Channel.GetSMCodeAsync(saleID, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> GetUserIDAsync(string ID, string serviceSessionId)
        {
            return base.Channel.GetUserIDAsync(ID, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> StationTimeLine2Async(int pTrainNumber, int pSCP, int pSCPs, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.StationTimeLine2Async(pTrainNumber, pSCP, pSCPs, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> StationTimeLineAsync(int pTrainNumber, int pSCP, int pSCPs, string serviceSessionId)
        {
            return base.Channel.StationTimeLineAsync(pTrainNumber, pSCP, pSCPs, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<decimal> DiscountMoneyAsync(int PathCode, int WagonTypeCode, int Scp, string serviceSessionId)
        {
            return base.Channel.DiscountMoneyAsync(PathCode, WagonTypeCode, Scp, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRailwayOfficeTicketDataAsync(int orderId, string serviceSessionId)
        {
            return base.Channel.GetRailwayOfficeTicketDataAsync(orderId, serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.GetTicketListByWagonUicResponse> MyApp.SvcProxy.Online2ServicesSoap.GetTicketListByWagonUicAsync(MyApp.SvcProxy.GetTicketListByWagonUicRequest request)
        {
            return base.Channel.GetTicketListByWagonUicAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.GetTicketListByWagonUicResponse> GetTicketListByWagonUicAsync(System.Nullable<int> trainNumber, int fromUicWagon, int toUicWagon, System.DateTime fromMoveDate, System.DateTime toMoveDate, string serviceSessionId)
        {
            MyApp.SvcProxy.GetTicketListByWagonUicRequest inValue = new MyApp.SvcProxy.GetTicketListByWagonUicRequest();
            inValue.trainNumber = trainNumber;
            inValue.fromUicWagon = fromUicWagon;
            inValue.toUicWagon = toUicWagon;
            inValue.fromMoveDate = fromMoveDate;
            inValue.toMoveDate = toMoveDate;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).GetTicketListByWagonUicAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetLastFinancialPeriodDateAsync(int companyId, string serviceSessionId)
        {
            return base.Channel.GetLastFinancialPeriodDateAsync(companyId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetGuaranteeAmountForSellerAsync(int companyId, int sellerCode, string serviceSessionId)
        {
            return base.Channel.GetGuaranteeAmountForSellerAsync(companyId, sellerCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonCapacityByTrainNumberAsync(int Owners, int TrainNumber, System.DateTime MD, string Checksum, string serviceSessionId)
        {
            return base.Channel.GetWagonCapacityByTrainNumberAsync(Owners, TrainNumber, MD, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> IsCompartmentByTicketNumberAsync(int ticketNumber, string serviceSessionId)
        {
            return base.Channel.IsCompartmentByTicketNumberAsync(ticketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPassengerTicketListAsync(string nationalCode, string serviceSessionId)
        {
            return base.Channel.GetPassengerTicketListAsync(nationalCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketListByRegisterDateAsync(int ownerCode, System.DateTime registerDate, string serviceSessionId)
        {
            return base.Channel.GetTicketListByRegisterDateAsync(ownerCode, registerDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketListByMoveDateAsync(System.DateTime moveDate, int skip, int take, string serviceSessionId)
        {
            return base.Channel.GetTicketListByMoveDateAsync(moveDate, skip, take, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> GetTicketPrintCodeAsync(string ticketNumber, string serviceSessionId)
        {
            return base.Channel.GetTicketPrintCodeAsync(ticketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> GetShortLinkByTicketNumberAsync(int ticketNumber, string serviceSessionId)
        {
            return base.Channel.GetShortLinkByTicketNumberAsync(ticketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> CalculatePriceForTicketAsync(
                    int sellId, 
                    string[] cName, 
                    string[] cFamily, 
                    string[] nationalCd, 
                    int[] tcktType, 
                    int[] tariff, 
                    int[] Food, 
                    int[] birthDate, 
                    string[] promotionCode, 
                    decimal percentDiscountForRajaSite, 
                    int appcode, 
                    int circularNumberSerial, 
                    int circularPeriod, 
                    System.DateTime seatMoveDate, 
                    string seatExitTime, 
                    int rateCode, 
                    int pathCode, 
                    int rationCode, 
                    string checksum, 
                    string serviceSessionId)
        {
            return base.Channel.CalculatePriceForTicketAsync(sellId, cName, cFamily, nationalCd, tcktType, tariff, Food, birthDate, promotionCode, percentDiscountForRajaSite, appcode, circularNumberSerial, circularPeriod, seatMoveDate, seatExitTime, rateCode, pathCode, rationCode, checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetAllRefundAsync(string orderId, string serviceSessionId)
        {
            return base.Channel.GetAllRefundAsync(orderId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRefundAsync(long refundId, string serviceSessionId)
        {
            return base.Channel.GetRefundAsync(refundId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetAllRefundDetailsAsync(string orderId, string serviceSessionId)
        {
            return base.Channel.GetAllRefundDetailsAsync(orderId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRefundDetailsAsync(long refundId, string serviceSessionId)
        {
            return base.Channel.GetRefundDetailsAsync(refundId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAllRefundDetailsAsync(int id, int newPrice, string serviceSessionId)
        {
            return base.Channel.UpdateAllRefundDetailsAsync(id, newPrice, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRefundDetailsAsync(long id, int newPrice, string serviceSessionId)
        {
            return base.Channel.UpdateRefundDetailsAsync(id, newPrice, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRajaSiteCartAsync(int ticketNumber, string serviceSessionId)
        {
            return base.Channel.GetRajaSiteCartAsync(ticketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAllRefundHotelDetailsAsync(int id, int newPrice, string serviceSessionId)
        {
            return base.Channel.UpdateAllRefundHotelDetailsAsync(id, newPrice, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAllRefundTransactionBankAsync(string orderId, string bankTransActionId, int status, string serviceSessionId)
        {
            return base.Channel.UpdateAllRefundTransactionBankAsync(orderId, bankTransActionId, status, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAllRefundTransactionLocalAsync(string orderId, int status, string serviceSessionId)
        {
            return base.Channel.UpdateAllRefundTransactionLocalAsync(orderId, status, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRefundStatusAsync(long id, int status, string serviceSessionId)
        {
            return base.Channel.UpdateRefundStatusAsync(id, status, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> SendSMSAsync(string message, string mobile, string serviceSessionId)
        {
            return base.Channel.SendSMSAsync(message, mobile, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task MessageServiceAsync(string message, string mobile, int smsType, int trainOwner, int sendSmsRequest, string serviceSessionId)
        {
            return base.Channel.MessageServiceAsync(message, mobile, smsType, trainOwner, sendSmsRequest, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRefundOrderInfoAsync(string orderId, string serviceSessionId)
        {
            return base.Channel.GetRefundOrderInfoAsync(orderId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketDataAsync(int ticketNumber, string serviceSessionId)
        {
            return base.Channel.GetTicketDataAsync(ticketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketDataSummaryAsync(int ticketNumber, string serviceSessionId)
        {
            return base.Channel.GetTicketDataSummaryAsync(ticketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SearchTicketAsync(string qry, string serviceSessionId)
        {
            return base.Channel.SearchTicketAsync(qry, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketInfoAsync(string TcktSr, int TcktNo, string serviceSessionId)
        {
            return base.Channel.GetTicketInfoAsync(TcktSr, TcktNo, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketInfoGeneralAsync(long Tcktid, string serviceSessionId)
        {
            return base.Channel.GetTicketInfoGeneralAsync(Tcktid, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTotalTicketInfoGeneralAsync(string Tcktseries, int TcktNo, int SaleCenterCD, int SaleCenterCDReg, int WN, int SeatNu, string serviceSessionId)
        {
            return base.Channel.GetTotalTicketInfoGeneralAsync(Tcktseries, TcktNo, SaleCenterCD, SaleCenterCDReg, WN, SeatNu, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportDisabledAsync(string NationalCode, System.DateTime MoveDate, int TrainNumber, int WagonNumber, int SeatNumber, string serviceSessionId)
        {
            return base.Channel.TicketReportDisabledAsync(NationalCode, MoveDate, TrainNumber, WagonNumber, SeatNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportAsync(int appcode, int SaleId, int TicketNember, string TicketSeries, string serviceSessionId)
        {
            return base.Channel.TicketReportAsync(appcode, SaleId, TicketNember, TicketSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportAAsync(int appcode, int SaleId, int TicketNember, string TicketSeries, string serviceSessionId)
        {
            return base.Channel.TicketReportAAsync(appcode, SaleId, TicketNember, TicketSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportA_NewAsync(int appcode, int SaleId, int TicketNember, string TicketSeries, string serviceSessionId)
        {
            return base.Channel.TicketReportA_NewAsync(appcode, SaleId, TicketNember, TicketSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TicketReportArbaeenAsync(int GoTicketNember, string GOTicketSeries, int BackTicketNember, string BackTicketSeries, string serviceSessionId)
        {
            return base.Channel.TicketReportArbaeenAsync(GoTicketNember, GOTicketSeries, BackTicketNember, BackTicketSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> InternetTicketReportAsync(int appcode, string TicketNember, string TicketSeries, string serviceSessionId)
        {
            return base.Channel.InternetTicketReportAsync(appcode, TicketNember, TicketSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSaleCentersListAsync(string serviceSessionId)
        {
            return base.Channel.GetSaleCentersListAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> CheckDeadLineAsync(string userCode, string ip, System.DateTime loginTime, string serviceSessionId)
        {
            return base.Channel.CheckDeadLineAsync(userCode, ip, loginTime, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainListWithOwnerAsync(int fromStation, int toStation, System.DateTime moveDate, string serviceSessionId)
        {
            return base.Channel.GetTrainListWithOwnerAsync(fromStation, toStation, moveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainListWagonAsync(int FromStation, int ToStation, System.DateTime MD, System.DateTime ED, int RationCode, int SexCode, int TrainNo, string Checksum, string serviceSessionId)
        {
            return base.Channel.GetTrainListWagonAsync(FromStation, ToStation, MD, ED, RationCode, SexCode, TrainNo, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainListFreeseatAsync(System.DateTime MD, int TrainNo, string serviceSessionId)
        {
            return base.Channel.GetTrainListFreeseatAsync(MD, TrainNo, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOptionalServicesAsync(int SCP, int TrainNo, int Scps, int WagonTypeCode, System.DateTime MoveDateTimeTrain, string serviceSessionId)
        {
            return base.Channel.GetOptionalServicesAsync(SCP, TrainNo, Scps, WagonTypeCode, MoveDateTimeTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOptionalServicesv2Async(int SCP, int TrainNo, int startstation, int endstation, int Scps, int WagonTypeCode, System.DateTime MoveDateTimeTrain, string serviceSessionId)
        {
            return base.Channel.GetOptionalServicesv2Async(SCP, TrainNo, startstation, endstation, Scps, WagonTypeCode, MoveDateTimeTrain, serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.RegisterTiketResponse> MyApp.SvcProxy.Online2ServicesSoap.RegisterTiketAsync(MyApp.SvcProxy.RegisterTiketRequest request)
        {
            return base.Channel.RegisterTiketAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.RegisterTiketResponse> RegisterTiketAsync(
                    int SellId, 
                    string[] cName, 
                    string[] CFamily, 
                    string[] NationalCD, 
                    string Tel, 
                    int[] tcktType, 
                    int[] tariff, 
                    int[][] Srvcs, 
                    string[] personel, 
                    string[] OrderNumber, 
                    string[] TicketNumber, 
                    int[] Food, 
                    int[] birthDate, 
                    string[] promotionCode, 
                    int charter, 
                    int appcode, 
                    string Checksum, 
                    string serviceSessionId)
        {
            MyApp.SvcProxy.RegisterTiketRequest inValue = new MyApp.SvcProxy.RegisterTiketRequest();
            inValue.SellId = SellId;
            inValue.cName = cName;
            inValue.CFamily = CFamily;
            inValue.NationalCD = NationalCD;
            inValue.Tel = Tel;
            inValue.tcktType = tcktType;
            inValue.tariff = tariff;
            inValue.Srvcs = Srvcs;
            inValue.personel = personel;
            inValue.OrderNumber = OrderNumber;
            inValue.TicketNumber = TicketNumber;
            inValue.Food = Food;
            inValue.birthDate = birthDate;
            inValue.promotionCode = promotionCode;
            inValue.charter = charter;
            inValue.appcode = appcode;
            inValue.Checksum = Checksum;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).RegisterTiketAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.RegisterTiket_V3Response> MyApp.SvcProxy.Online2ServicesSoap.RegisterTiket_V3Async(MyApp.SvcProxy.RegisterTiket_V3Request request)
        {
            return base.Channel.RegisterTiket_V3Async(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.RegisterTiket_V3Response> RegisterTiket_V3Async(
                    int SellId, 
                    string[] cName, 
                    string[] CFamily, 
                    string[] NationalCD, 
                    string Tel, 
                    int[] tcktType, 
                    int[] tariff, 
                    int[][] Srvcs, 
                    string[] personel, 
                    string[] OrderNumber, 
                    string[] TicketNumber, 
                    int[] Food, 
                    int[] birthDate, 
                    string[] promotionCode, 
                    decimal PercentDiscount, 
                    int charter, 
                    int appcode, 
                    int BankID, 
                    string Checksum, 
                    string serviceSessionId)
        {
            MyApp.SvcProxy.RegisterTiket_V3Request inValue = new MyApp.SvcProxy.RegisterTiket_V3Request();
            inValue.SellId = SellId;
            inValue.cName = cName;
            inValue.CFamily = CFamily;
            inValue.NationalCD = NationalCD;
            inValue.Tel = Tel;
            inValue.tcktType = tcktType;
            inValue.tariff = tariff;
            inValue.Srvcs = Srvcs;
            inValue.personel = personel;
            inValue.OrderNumber = OrderNumber;
            inValue.TicketNumber = TicketNumber;
            inValue.Food = Food;
            inValue.birthDate = birthDate;
            inValue.promotionCode = promotionCode;
            inValue.PercentDiscount = PercentDiscount;
            inValue.charter = charter;
            inValue.appcode = appcode;
            inValue.BankID = BankID;
            inValue.Checksum = Checksum;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).RegisterTiket_V3Async(inValue);
        }
        
        public System.Threading.Tasks.Task<int> CallCenterBookingSMSAsync(int BookingNo, string serviceSessionId)
        {
            return base.Channel.CallCenterBookingSMSAsync(BookingNo, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ManagementSMSAsync(int BookingNo, string serviceSessionId)
        {
            return base.Channel.ManagementSMSAsync(BookingNo, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ManagementRajaSMSAsync(int BookingNo, string serviceSessionId)
        {
            return base.Channel.ManagementRajaSMSAsync(BookingNo, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task DeleteTicketAsync(long sellId, int SaleCenterCD, int TrainNumber, System.DateTime movedate, string serviceSessionId)
        {
            return base.Channel.DeleteTicketAsync(sellId, SaleCenterCD, TrainNumber, movedate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<short> DeleteTicket2Async(long sellId, int SaleCenterCD, int TrainNumber, System.DateTime movedate, string serviceSessionId)
        {
            return base.Channel.DeleteTicket2Async(sellId, SaleCenterCD, TrainNumber, movedate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListTicketNumberAsync(int SellId, int SeatCount, string serviceSessionId)
        {
            return base.Channel.ListTicketNumberAsync(SellId, SeatCount, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> TicketManagementAsync(int pSellId, int pmanagementCode, int porderNumber, string Checksum, string serviceSessionId)
        {
            return base.Channel.TicketManagementAsync(pSellId, pmanagementCode, porderNumber, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ChkTicketManagementAsync(int pmanagementCode, int porderNumber, string serviceSessionId)
        {
            return base.Channel.ChkTicketManagementAsync(pmanagementCode, porderNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ViewTicketSeatAsync(int LockedBy, int isFloat, int FS, int TS, int TrainNumber, System.DateTime moveDate, string serviceSessionId)
        {
            return base.Channel.ViewTicketSeatAsync(LockedBy, isFloat, FS, TS, TrainNumber, moveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> TrainMsgAsync(int TrainNo, System.DateTime MD, int WagonType, int pRationCD, string serviceSessionId)
        {
            return base.Channel.TrainMsgAsync(TrainNo, MD, WagonType, pRationCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ViewPriceTicketAsync(int rateCode, int tariffCode, int TcktTypeCD, int pathCode, int fromStation, int totStation, int wagonType, System.DateTime pDate, int trainNumber, int pScps, string discountClub, int soldcount, int pRation, string serviceSessionId)
        {
            return base.Channel.ViewPriceTicketAsync(rateCode, tariffCode, TcktTypeCD, pathCode, fromStation, totStation, wagonType, pDate, trainNumber, pScps, discountClub, soldcount, pRation, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ViewPriceTicket2Async(int rateCode, int tariffCode, int TcktTypeCD, int pathCode, int fromStation, int totStation, int wagonType, System.DateTime pDate, int trainNumber, int pScps, string discountClub, int soldcount, int pRation, int passengerCount, string serviceSessionId)
        {
            return base.Channel.ViewPriceTicket2Async(rateCode, tariffCode, TcktTypeCD, pathCode, fromStation, totStation, wagonType, pDate, trainNumber, pScps, discountClub, soldcount, pRation, passengerCount, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> AgentAllowedRationAsync(int SaleCenterCD, string serviceSessionId)
        {
            return base.Channel.AgentAllowedRationAsync(SaleCenterCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> AgentAllowedTarrifAsync(int SaleCenterCD, string serviceSessionId)
        {
            return base.Channel.AgentAllowedTarrifAsync(SaleCenterCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> AgentAllowedTicketAsync(int SaleCenterCD, string serviceSessionId)
        {
            return base.Channel.AgentAllowedTicketAsync(SaleCenterCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterSoldTicketAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, string pStatusString, string serviceSessionId)
        {
            return base.Channel.SaleCenterSoldTicketAsync(pSellerCode, FromDate, ToDate, pStatusString, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> AgentMembersActivityAsync(int pAgentCode, System.DateTime FromDate, System.DateTime ToDate, int SaleCenter, string serviceSessionId)
        {
            return base.Channel.AgentMembersActivityAsync(pAgentCode, FromDate, ToDate, SaleCenter, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LastSerialTicketAsync(int pSaleCenterCD, string serviceSessionId)
        {
            return base.Channel.LastSerialTicketAsync(pSaleCenterCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> InsertSerialTicketAsync(int pSellCenterCode, long pFirstNumber, long pFinishNumber, string pSeries, string serviceSessionId)
        {
            return base.Channel.InsertSerialTicketAsync(pSellCenterCode, pFirstNumber, pFinishNumber, pSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListSaleCenterAsync(int pAgentCode, string serviceSessionId)
        {
            return base.Channel.ListSaleCenterAsync(pAgentCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListSaleCenterZoneAccessAsync(int pFZoneCode, string serviceSessionId)
        {
            return base.Channel.ListSaleCenterZoneAccessAsync(pFZoneCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ChSerialTicketAsync(int pSellCenterCode, long pFirstNumber, long pFinishNumber, string pSeries, string serviceSessionId)
        {
            return base.Channel.ChSerialTicketAsync(pSellCenterCode, pFirstNumber, pFinishNumber, pSeries, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> CancelTicketAsync(long pTkSr, int TrainNumber, System.DateTime moveDate, string serviceSessionId)
        {
            return base.Channel.CancelTicketAsync(pTkSr, TrainNumber, moveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> GetpersentReduplicateAsync(string serviceSessionId)
        {
            return base.Channel.GetpersentReduplicateAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ReduplicateTicketAsync(string oldTcktSr, int oldTcktNo, int Formula10, int orgFormula10, int SellerCD, int SaleCenterCD, long TcktID, long degree, string serviceSessionId)
        {
            return base.Channel.ReduplicateTicketAsync(oldTcktSr, oldTcktNo, Formula10, orgFormula10, SellerCD, SaleCenterCD, TcktID, degree, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ReprintTicketAsync(int SellerCD, int SaleCenterCD, long TcktID, string serviceSessionId)
        {
            return base.Channel.ReprintTicketAsync(SellerCD, SaleCenterCD, TcktID, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTcktNoproAsync(long ticID, string serviceSessionId)
        {
            return base.Channel.GetTcktNoproAsync(ticID, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ReduplicateHistoryAsync(long tcktId, string serviceSessionId)
        {
            return base.Channel.ReduplicateHistoryAsync(tcktId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketInfoAndRuinedAsync(long Tcktid, int selCd, string serviceSessionId)
        {
            return base.Channel.GetTicketInfoAndRuinedAsync(Tcktid, selCd, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> RuinTicketAsync(long Tcktid, int selCd, string serviceSessionId)
        {
            return base.Channel.RuinTicketAsync(Tcktid, selCd, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> RuinTicketTotalAsync(string Tcktseries, int TcktNo, int SaleCenterCD, int SaleCenterCDReg, int SellerCDReg, int WN, int SeatNu, string serviceSessionId)
        {
            return base.Channel.RuinTicketTotalAsync(Tcktseries, TcktNo, SaleCenterCD, SaleCenterCDReg, SellerCDReg, WN, SeatNu, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.RuindAllTicketTotal_HotelResponseRuindAllTicketTotal_HotelResult> RuindAllTicketTotal_HotelAsync(int TcktNo, int SaleCenterCD, int SaleCenterCDReg, int SellerCDReg, int WN, int SeatNu, string serviceSessionId)
        {
            return base.Channel.RuindAllTicketTotal_HotelAsync(TcktNo, SaleCenterCD, SaleCenterCDReg, SellerCDReg, WN, SeatNu, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.RefundAllTicketResponseRefundAllTicketResult> RefundAllTicketAsync(int ticketNumber, int saleCenterCode, int saleCenterCodeRegister, int sellerCodeRegister, int refundAllMode, string serviceSessionId)
        {
            return base.Channel.RefundAllTicketAsync(ticketNumber, saleCenterCode, saleCenterCodeRegister, sellerCodeRegister, refundAllMode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> RefundTicketAsync(int TicketNumber, string Ticketseries, int SaleCenterCode, int RefundSaleCenterCode, int RefundSellerCode, int WagonNumber, int SeatNumber, string serviceSessionId)
        {
            return base.Channel.RefundTicketAsync(TicketNumber, Ticketseries, SaleCenterCode, RefundSaleCenterCode, RefundSellerCode, WagonNumber, SeatNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> DoRefundTicketAsync(int TicketNumber, string TicketSeries, int SaleCenterCode, int SellerCode, int WagonNumber, int SeatNumber, string serviceSessionId)
        {
            return base.Channel.DoRefundTicketAsync(TicketNumber, TicketSeries, SaleCenterCode, SellerCode, WagonNumber, SeatNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> RefundTicket2Async(int TicketNumber, string Ticketseries, int SaleCenterCode, int RefundSaleCenterCode, int RefundSellerCode, int WagonNumber, int SeatNumber, int senderCode, string serviceSessionId)
        {
            return base.Channel.RefundTicket2Async(TicketNumber, Ticketseries, SaleCenterCode, RefundSaleCenterCode, RefundSellerCode, WagonNumber, SeatNumber, senderCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> RefundInfoAsync(int TicketNumber, string Ticketseries, int SaleCenterCode, int RefundSaleCenterCode, int WagonNumber, int SeatNumber, string serviceSessionId)
        {
            return base.Channel.RefundInfoAsync(TicketNumber, Ticketseries, SaleCenterCode, RefundSaleCenterCode, WagonNumber, SeatNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> RefundHotelInfoAsync(int SaleId, string serviceSessionId)
        {
            return base.Channel.RefundHotelInfoAsync(SaleId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> RefundInfo2Async(int TicketNumber, string Ticketseries, int SaleCenterCode, int RefundSaleCenterCode, int WagonNumber, int SeatNumber, int senderCode, string serviceSessionId)
        {
            return base.Channel.RefundInfo2Async(TicketNumber, Ticketseries, SaleCenterCode, RefundSaleCenterCode, WagonNumber, SeatNumber, senderCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRefundInfoAsync(int TicketNumber, string TicketSeries, int SaleCenterCode, int WagonNumber, int SeatNumber, string serviceSessionId)
        {
            return base.Channel.GetRefundInfoAsync(TicketNumber, TicketSeries, SaleCenterCode, WagonNumber, SeatNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListManagementAsync(string serviceSessionId)
        {
            return base.Channel.ListManagementAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterRuniedTicketAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, string serviceSessionId)
        {
            return base.Channel.SaleCenterRuniedTicketAsync(pSellerCode, FromDate, ToDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterReportWithAnalyseAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, string serviceSessionId)
        {
            return base.Channel.SaleCenterReportWithAnalyseAsync(pAgentCode, pSaleCenterCode, pFromDate, pToDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FinancialReportAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, string serviceSessionId)
        {
            return base.Channel.FinancialReportAsync(pAgentCode, pSaleCenterCode, pFromDate, pToDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FinancialReportownerAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, string serviceSessionId)
        {
            return base.Channel.FinancialReportownerAsync(pAgentCode, pSaleCenterCode, pFromDate, pToDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FinancialReportRationAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, string serviceSessionId)
        {
            return base.Channel.FinancialReportRationAsync(pAgentCode, pSaleCenterCode, pFromDate, pToDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FinancialReportownerForWebservicesAsync(int pAgentCode, int pSaleCenterCode, System.DateTime pFromDate, System.DateTime pToDate, int RationCode, string serviceSessionId)
        {
            return base.Channel.FinancialReportownerForWebservicesAsync(pAgentCode, pSaleCenterCode, pFromDate, pToDate, RationCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterReportAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, int pFrosh, int pEbtal, int pEstrdad, int pKhsarat, int pAlmosana, int pMojada, int pReportType, string pFromSerial, string pToserial, string serviceSessionId)
        {
            return base.Channel.SaleCenterReportAsync(pSellerCode, FromDate, ToDate, pFrosh, pEbtal, pEstrdad, pKhsarat, pAlmosana, pMojada, pReportType, pFromSerial, pToserial, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ReportSaleHotelAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, string serviceSessionId)
        {
            return base.Channel.ReportSaleHotelAsync(pSellerCode, FromDate, ToDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SaleCenterReportwithownerAsync(int pSellerCode, System.DateTime FromDate, System.DateTime ToDate, int pFrosh, int pEbtal, int pEstrdad, int pKhsarat, int pAlmosana, int pMojada, int pReportType, string pFromSerial, string pToserial, string serviceSessionId)
        {
            return base.Channel.SaleCenterReportwithownerAsync(pSellerCode, FromDate, ToDate, pFrosh, pEbtal, pEstrdad, pKhsarat, pAlmosana, pMojada, pReportType, pFromSerial, pToserial, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> RoundAsync(int mny, int r, string serviceSessionId)
        {
            return base.Channel.RoundAsync(mny, r, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<long> IsDamageAsync(int TrainNo, int SC, int FS, int TS, int WN, int Compartment, int Seat, System.DateTime MD, int scps, string serviceSessionId)
        {
            return base.Channel.IsDamageAsync(TrainNo, SC, FS, TS, WN, Compartment, Seat, MD, scps, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> FoodMoneyDamageAsync(long Tcktid, int SellerCD, string serviceSessionId)
        {
            return base.Channel.FoodMoneyDamageAsync(Tcktid, SellerCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> DamageInfoAsync(int TrainNo, int SC, int FS, int TS, int WN, int Compartment, int Seat, System.DateTime MD, int scps, string serviceSessionId)
        {
            return base.Channel.DamageInfoAsync(TrainNo, SC, FS, TS, WN, Compartment, Seat, MD, scps, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalAmontDamageAsync(string listFormula, int TrainNo, int WT, int TariffCD, int TcktTypeCD, int RateCD, int FS, int TS, string serviceSessionId)
        {
            return base.Channel.GetTotalAmontDamageAsync(listFormula, TrainNo, WT, TariffCD, TcktTypeCD, RateCD, FS, TS, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetFirstTicketNumberReduplicateAsync(long tckid, int SellerCD, string serviceSessionId)
        {
            return base.Channel.GetFirstTicketNumberReduplicateAsync(tckid, SellerCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> DamageTicketAsync(long Tcktid, int SellerCD, string serviceSessionId)
        {
            return base.Channel.DamageTicketAsync(Tcktid, SellerCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task RuptureAsync(string TcktSr, int TcktFrom, int TcktTo, int SellerCD, int SaleCenterCD, string Cause, string serviceSessionId)
        {
            return base.Channel.RuptureAsync(TcktSr, TcktFrom, TcktTo, SellerCD, SaleCenterCD, Cause, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> RuptureInfoAsync(int FromTicketNo, int SellerCode, int SaleCenterCode, string serviceSessionId)
        {
            return base.Channel.RuptureInfoAsync(FromTicketNo, SellerCode, SaleCenterCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LoginAsync(string Username, string Password, bool uptodate, string serviceSessionId)
        {
            return base.Channel.LoginAsync(Username, Password, uptodate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTokenAsync(int Usercode, string UserName, string serviceSessionId)
        {
            return base.Channel.UpdateTokenAsync(Usercode, UserName, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.InternetMainMenu[]> internetMenuAsync(string serviceSessionId)
        {
            return base.Channel.internetMenuAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetMessageAsync(int msgType, int GroupCD, string serviceSessionId)
        {
            return base.Channel.GetMessageAsync(msgType, GroupCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> EncryptTxtAsync(string inpStr, string ky, string serviceSessionId)
        {
            return base.Channel.EncryptTxtAsync(inpStr, ky, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> DecryptTxtAsync(string inpStr, string ky, string serviceSessionId)
        {
            return base.Channel.DecryptTxtAsync(inpStr, ky, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> TicketExistsAsync(string tcktSr, int tcktNo, int saleCenter, int wn, int sn, string serviceSessionId)
        {
            return base.Channel.TicketExistsAsync(tcktSr, tcktNo, saleCenter, wn, sn, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<long> STicketExistsAsync(string tcktSr, int tcktNo, string serviceSessionId)
        {
            return base.Channel.STicketExistsAsync(tcktSr, tcktNo, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> TicketExistsReprintAsync(string TcktSr, int TcktNo, int SaleCenter, int WN, int SN, string serviceSessionId)
        {
            return base.Channel.TicketExistsReprintAsync(TcktSr, TcktNo, SaleCenter, WN, SN, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> ErrorMessageAsync(int ErrCD)
        {
            return base.Channel.ErrorMessageAsync(ErrCD);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> CurDBServerTimeAsync(string serviceSessionId)
        {
            return base.Channel.CurDBServerTimeAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> FixStrAsync(string s)
        {
            return base.Channel.FixStrAsync(s);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListStationAsync(string serviceSessionId)
        {
            return base.Channel.ListStationAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListStationClientAsync(string serviceSessionId)
        {
            return base.Channel.ListStationClientAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListToStationClientAsync(string serviceSessionId)
        {
            return base.Channel.ListToStationClientAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListprovinceAsync(string serviceSessionId)
        {
            return base.Channel.ListprovinceAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<long> insertpayBankOperationsAsync(long porderId, int pTransactionId, long pMainOrderId, int pExecutedBy, int pExecutedByAgency, string pFunctionName, string pFunctionInputParameters, string pFunctionResult, System.DateTime pDateTime, string serviceSessionId)
        {
            return base.Channel.insertpayBankOperationsAsync(porderId, pTransactionId, pMainOrderId, pExecutedBy, pExecutedByAgency, pFunctionName, pFunctionInputParameters, pFunctionResult, pDateTime, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> updatepayBankOperationsAsync(long pOrderId, string pFunctionResult, string serviceSessionId)
        {
            return base.Channel.updatepayBankOperationsAsync(pOrderId, pFunctionResult, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> updatepayBankOperationsAllAsync(long pOrderId, string pFunctionResult, System.DateTime pExecutedAt, string serviceSessionId)
        {
            return base.Channel.updatepayBankOperationsAllAsync(pOrderId, pFunctionResult, pExecutedAt, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> payBankAsync(string serviceSessionId)
        {
            return base.Channel.payBankAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> insert_onl_pay_BankTransactionsAsync(int pid, int pBankId, int pSellMasterId, long pRajaOrderId, string pBankTransactionId, int pAmount, int pTransactionTypeId, long pIsSuccessfull, int pCommunicationTypeId, System.DateTime pDateTime, string serviceSessionId)
        {
            return base.Channel.insert_onl_pay_BankTransactionsAsync(pid, pBankId, pSellMasterId, pRajaOrderId, pBankTransactionId, pAmount, pTransactionTypeId, pIsSuccessfull, pCommunicationTypeId, pDateTime, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> update_onl_pay_BankTransactionsAsync(int pRajaTransactionsId, int pBankId, long pRajaOrderId, string pBankTransactionId, short pIsSuccessfull, string serviceSessionId)
        {
            return base.Channel.update_onl_pay_BankTransactionsAsync(pRajaTransactionsId, pBankId, pRajaOrderId, pBankTransactionId, pIsSuccessfull, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> update_onl_pay_BankTransactionsallAsync(int pRajaTransactionsId, int pBankId, long pRajaOrderId, string pBankTransactionId, short pIsSuccessfull, int pSellMasterId, int pAmount, int pTransactionTypeId, int pCommunicationTypeId, short pSettled, short pReversed, int pRefundAmount, System.DateTime pdaDateTime, string serviceSessionId)
        {
            return base.Channel.update_onl_pay_BankTransactionsallAsync(pRajaTransactionsId, pBankId, pRajaOrderId, pBankTransactionId, pIsSuccessfull, pSellMasterId, pAmount, pTransactionTypeId, pCommunicationTypeId, pSettled, pReversed, pRefundAmount, pdaDateTime, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServerTimeAsync(string serviceSessionId)
        {
            return base.Channel.GetServerTimeAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSellMasterAsync(int pSMID, int pSellMasterAmount, string serviceSessionId)
        {
            return base.Channel.UpdateSellMasterAsync(pSMID, pSellMasterAmount, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> InternetTicketPrintAsync(int SellID, string Ids, int personRqst, int SaleCenterCD, int SellerCode, int appType, string serviceSessionId)
        {
            return base.Channel.InternetTicketPrintAsync(SellID, Ids, personRqst, SaleCenterCD, SellerCode, appType, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> OptionalServiceReportAsync(int TrainNumber, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.OptionalServiceReportAsync(TrainNumber, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PassengerReportForSaleCenterAsync(int TrainNember, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.PassengerReportForSaleCenterAsync(TrainNember, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task ReverseOprationAsync(string serviceSessionId)
        {
            return base.Channel.ReverseOprationAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListReverseAsync(string serviceSessionId)
        {
            return base.Channel.ListReverseAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetReverseAsync(int id, string serviceSessionId)
        {
            return base.Channel.GetReverseAsync(id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task UpdateReverseAsync(int id, int DeleteCount, int IsChecked, int CheckCount, string serviceSessionId)
        {
            return base.Channel.UpdateReverseAsync(id, DeleteCount, IsChecked, CheckCount, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestAsync(int TrainNember, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.ManifestAsync(TrainNember, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestWebAsync(decimal SystemUserID, int TrainNember, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.ManifestWebAsync(SystemUserID, TrainNember, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestReportAsync(int TrainNember, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.ManifestReportAsync(TrainNember, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestCheckLoginAsync(string UserName, string Password, string Mobile, string Secure, string serviceSessionId)
        {
            return base.Channel.ManifestCheckLoginAsync(UserName, Password, Mobile, Secure, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestCheckLoginForSmsAsync(string UserName, string Password, string Mobile, string serviceSessionId)
        {
            return base.Channel.ManifestCheckLoginForSmsAsync(UserName, Password, Mobile, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestListCompanyAndTrainAsync(decimal SystemUserID, string serviceSessionId)
        {
            return base.Channel.ManifestListCompanyAndTrainAsync(SystemUserID, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestGetSystemUserAsync(decimal SystemUserID, string serviceSessionId)
        {
            return base.Channel.ManifestGetSystemUserAsync(SystemUserID, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ManifestUpdateSystemUserAsync(decimal SystemUserID, string Password, string serviceSessionId)
        {
            return base.Channel.ManifestUpdateSystemUserAsync(SystemUserID, Password, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> GetLastVersionAsync(string serviceSessionId)
        {
            return base.Channel.GetLastVersionAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> BankTransactionIdexistsAsync(string id, string serviceSessionId)
        {
            return base.Channel.BankTransactionIdexistsAsync(id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> InternetMessageAsync(string serviceSessionId)
        {
            return base.Channel.InternetMessageAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> RationRuindAsync(int rationCode, string serviceSessionId)
        {
            return base.Channel.RationRuindAsync(rationCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TrainWagonListHandHeldAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.TrainWagonListHandHeldAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PassangerListHandHeldAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.PassangerListHandHeldAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PassangerRailwayListAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.PassangerRailwayListAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TrainListHandHeldAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.TrainListHandHeldAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PassangerListGateAsync(short pTrainNumber, System.DateTime MoveDateTrain, string serviceSessionId)
        {
            return base.Channel.PassangerListGateAsync(pTrainNumber, MoveDateTrain, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ScheduleTrainAsync(string serviceSessionId)
        {
            return base.Channel.ScheduleTrainAsync(serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateErrorLogResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateErrorLogAsync(MyApp.SvcProxy.UpdateErrorLogRequest request)
        {
            return base.Channel.UpdateErrorLogAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateErrorLogResponse> UpdateErrorLogAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateErrorLogRequest inValue = new MyApp.SvcProxy.UpdateErrorLogRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateErrorLogAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketBossResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateTicketBossAsync(MyApp.SvcProxy.UpdateTicketBossRequest request)
        {
            return base.Channel.UpdateTicketBossAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketBossResponse> UpdateTicketBossAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateTicketBossRequest inValue = new MyApp.SvcProxy.UpdateTicketBossRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateTicketBossAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketBossNameResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateTicketBossNameAsync(MyApp.SvcProxy.UpdateTicketBossNameRequest request)
        {
            return base.Channel.UpdateTicketBossNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketBossNameResponse> UpdateTicketBossNameAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateTicketBossNameRequest inValue = new MyApp.SvcProxy.UpdateTicketBossNameRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateTicketBossNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.InsertSuggestionResponse> MyApp.SvcProxy.Online2ServicesSoap.InsertSuggestionAsync(MyApp.SvcProxy.InsertSuggestionRequest request)
        {
            return base.Channel.InsertSuggestionAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.InsertSuggestionResponse> InsertSuggestionAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.InsertSuggestionRequest inValue = new MyApp.SvcProxy.InsertSuggestionRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).InsertSuggestionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTrainWagonsResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateTrainWagonsAsync(MyApp.SvcProxy.UpdateTrainWagonsRequest request)
        {
            return base.Channel.UpdateTrainWagonsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTrainWagonsResponse> UpdateTrainWagonsAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateTrainWagonsRequest inValue = new MyApp.SvcProxy.UpdateTrainWagonsRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateTrainWagonsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketV2Response> MyApp.SvcProxy.Online2ServicesSoap.UpdateTicketV2Async(MyApp.SvcProxy.UpdateTicketV2Request request)
        {
            return base.Channel.UpdateTicketV2Async(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketV2Response> UpdateTicketV2Async(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateTicketV2Request inValue = new MyApp.SvcProxy.UpdateTicketV2Request();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateTicketV2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketResponse> MyApp.SvcProxy.Online2ServicesSoap.UpdateTicketAsync(MyApp.SvcProxy.UpdateTicketRequest request)
        {
            return base.Channel.UpdateTicketAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UpdateTicketResponse> UpdateTicketAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.UpdateTicketRequest inValue = new MyApp.SvcProxy.UpdateTicketRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UpdateTicketAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string> BozalinUpdateV2Async(string DataSend, string serviceSessionId)
        {
            return base.Channel.BozalinUpdateV2Async(DataSend, serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.BozalinUpdateResponse> MyApp.SvcProxy.Online2ServicesSoap.BozalinUpdateAsync(MyApp.SvcProxy.BozalinUpdateRequest request)
        {
            return base.Channel.BozalinUpdateAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.BozalinUpdateResponse> BozalinUpdateAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.BozalinUpdateRequest inValue = new MyApp.SvcProxy.BozalinUpdateRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).BozalinUpdateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.SmsHandHeldResponse> MyApp.SvcProxy.Online2ServicesSoap.SmsHandHeldAsync(MyApp.SvcProxy.SmsHandHeldRequest request)
        {
            return base.Channel.SmsHandHeldAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.SmsHandHeldResponse> SmsHandHeldAsync(byte[] DataSend, string serviceSessionId)
        {
            MyApp.SvcProxy.SmsHandHeldRequest inValue = new MyApp.SvcProxy.SmsHandHeldRequest();
            inValue.DataSend = DataSend;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).SmsHandHeldAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<bool> SmsHandHeldV2Async(string DataSend, string serviceSessionId)
        {
            return base.Channel.SmsHandHeldV2Async(DataSend, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ReSendActivationEmailAsync(string pUsername, string Password, string Url, string serviceSessionId)
        {
            return base.Channel.ReSendActivationEmailAsync(pUsername, Password, Url, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetHotelListAsync(int circularPeriod, int circularNumberSerial, int trainNumber, int wagonTypeCode, int wagonNumber, int coupeNumber, string serviceSessionId)
        {
            return base.Channel.GetHotelListAsync(circularPeriod, circularNumberSerial, trainNumber, wagonTypeCode, wagonNumber, coupeNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetHotelRoomListAsync(int hotelId, int circularWagonHotelId, System.DateTime fromDate, System.DateTime toDate, string serviceSessionId)
        {
            return base.Channel.GetHotelRoomListAsync(hotelId, circularWagonHotelId, fromDate, toDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetHotelServiceListAsync(int hotelId, System.DateTime fromDate, System.DateTime toDate, string serviceSessionId)
        {
            return base.Channel.GetHotelServiceListAsync(hotelId, fromDate, toDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetVoucherListAsync(int saleId, string serviceSessionId)
        {
            return base.Channel.GetVoucherListAsync(saleId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> InsertHotelServiceAsync(int ticketNumber, System.DateTime fromDate, System.DateTime toDate, int saleCenterCode, int circularWagonHotelId, int[] hotelRoomIds, int[] servicesIds, System.DateTime[] servicesDate, int[] servicesRequestCount, string serviceSessionId)
        {
            return base.Channel.InsertHotelServiceAsync(ticketNumber, fromDate, toDate, saleCenterCode, circularWagonHotelId, hotelRoomIds, servicesIds, servicesDate, servicesRequestCount, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> TicketHasHotelAsync(int ticketNumber, string serviceSessionId)
        {
            return base.Channel.TicketHasHotelAsync(ticketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServiceGroupsAsync(string serviceSessionId)
        {
            return base.Channel.GetServiceGroupsAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SearchValueAddedServicesAsync(string serviceSessionId, int trainNumber, int wagonTypeCode)
        {
            return base.Channel.SearchValueAddedServicesAsync(serviceSessionId, trainNumber, wagonTypeCode);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServicesAsync(int serviceGroupId, string serviceSessionId)
        {
            return base.Channel.GetServicesAsync(serviceGroupId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetProvidersAsync(string serviceSessionId)
        {
            return base.Channel.GetProvidersAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetProviderServicesAsync(int providerId, int serviceId, string serviceSessionId)
        {
            return base.Channel.GetProviderServicesAsync(providerId, serviceId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetProviderServiceDetailAsync(int providerServiceId, string serviceSessionId)
        {
            return base.Channel.GetProviderServiceDetailAsync(providerServiceId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServedTrainsAsync(string serviceSessionId)
        {
            return base.Channel.GetServedTrainsAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServedTrainProviderServicesAsync(int servedTrainId, string serviceSessionId)
        {
            return base.Channel.GetServedTrainProviderServicesAsync(servedTrainId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetServedTrainProviderServiceDetailAsync(int servedTrainId, int providerServiceId, string serviceSessionId)
        {
            return base.Channel.GetServedTrainProviderServiceDetailAsync(servedTrainId, providerServiceId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOrderAsync(int orderId, string serviceSessionId)
        {
            return base.Channel.GetOrderAsync(orderId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOrderOfTicketAsync(int ticketId, string serviceSessionId)
        {
            return base.Channel.GetOrderOfTicketAsync(ticketId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOrdersAsync(System.DateTime fromDate, System.DateTime toDate, string serviceSessionId)
        {
            return base.Channel.GetOrdersAsync(fromDate, toDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetOrderItemsAsync(int orderId, string serviceSessionId)
        {
            return base.Channel.GetOrderItemsAsync(orderId, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> wbsLoginAsync(string username, string password)
        {
            return base.Channel.wbsLoginAsync(username, password);
        }
        
        public System.Threading.Tasks.Task<int> GetRefundCodeAsync(long SailID, int Row, int uID, string pPassword, string serviceSessionId)
        {
            return base.Channel.GetRefundCodeAsync(SailID, Row, uID, pPassword, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPackageDataAsync(long TrainNumber, string Movedate, string serviceSessionId)
        {
            return base.Channel.GetPackageDataAsync(TrainNumber, Movedate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetSellDataAsync(long TicketNumber, string serviceSessionId)
        {
            return base.Channel.GetSellDataAsync(TicketNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> PricecalculationAsync(int rateCode, int TcktTypeCD, int pathCode, int fromStation, int totStation, int wagonType, System.DateTime pDate, int trainNumber, int pScps, string discountClub, int soldcount, int pRation, string serviceSessionId)
        {
            return base.Channel.PricecalculationAsync(rateCode, TcktTypeCD, pathCode, fromStation, totStation, wagonType, pDate, trainNumber, pScps, discountClub, soldcount, pRation, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetCircularTrainDataAsync(System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.GetCircularTrainDataAsync(MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetCircularTrainsAsync(long CP, string serviceSessionId)
        {
            return base.Channel.GetCircularTrainsAsync(CP, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketListForOwnersAsync(System.DateTime StartDate, System.DateTime EndDate, int Owners, string serviceSessionId)
        {
            return base.Channel.GetTicketListForOwnersAsync(StartDate, EndDate, Owners, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetRuinedListForOwnersAsync(System.DateTime StartDate, System.DateTime EndDate, int Owners, string serviceSessionId)
        {
            return base.Channel.GetRuinedListForOwnersAsync(StartDate, EndDate, Owners, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketAndRuinedListForUsersAsync(System.DateTime StartDate, System.DateTime EndDate, string serviceSessionId)
        {
            return base.Channel.GetTicketAndRuinedListForUsersAsync(StartDate, EndDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTicketMaxIdAsync(string serviceSessionId)
        {
            return base.Channel.GetTicketMaxIdAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> GetTicketRecordsAsync(long Id, int Count, string serviceSessionId)
        {
            return base.Channel.GetTicketRecordsAsync(Id, Count, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<short> PersonConfirmAsync(long SellID, short ReqCount, string[] FaName, string[] FaLastName, string[] NationalCode, string[] EnName, string[] EnLastName, string[] PassportNo, string serviceSessionId)
        {
            return base.Channel.PersonConfirmAsync(SellID, ReqCount, FaName, FaLastName, NationalCode, EnName, EnLastName, PassportNo, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetBookingDetailAsync(long bookingNo, string serviceSessionId)
        {
            return base.Channel.GetBookingDetailAsync(bookingNo, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> BookingTicketConfirmAsync(long bookingNo, string bankTransactionNumber, System.DateTime bankTransactionDate, int amount, string serviceSessionId)
        {
            return base.Channel.BookingTicketConfirmAsync(bookingNo, bankTransactionNumber, bankTransactionDate, amount, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> suspendAgencyAsync(int selerCode, System.DateTime fromDate, System.DateTime toDate, string Description, string serviceSessionId)
        {
            return base.Channel.suspendAgencyAsync(selerCode, fromDate, toDate, Description, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetCaptchaAsync(int sellerCode, string serviceSessionId)
        {
            return base.Channel.GetCaptchaAsync(sellerCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckCaptchaAsync(int sellerCode, int captchaId, string captchaText, string serviceSessionId)
        {
            return base.Channel.CheckCaptchaAsync(sellerCode, captchaId, captchaText, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LockSeatAsync(int TrainNo, System.DateTime MoveDate, int StartStation, int ToStation, int RationCode, int WagonType, int SexCode, int SeatCount, int Degree, long SellMaster, int AppCode, string Checksum, string serviceSessionId)
        {
            return base.Channel.LockSeatAsync(TrainNo, MoveDate, StartStation, ToStation, RationCode, WagonType, SexCode, SeatCount, Degree, SellMaster, AppCode, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LockSeat_v3Async(int TrainNo, System.DateTime MoveDate, int StartStation, int ToStation, int RationCode, int WagonType, int SexCode, int SeatCount, int Degree, long SellMaster, int AppCode, int CapacityCompartment, int pIsExclusive, string Checksum, string serviceSessionId)
        {
            return base.Channel.LockSeat_v3Async(TrainNo, MoveDate, StartStation, ToStation, RationCode, WagonType, SexCode, SeatCount, Degree, SellMaster, AppCode, CapacityCompartment, pIsExclusive, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> LockSeat_v4Async(MyApp.SvcProxy.LockSeatDto[] lockSeatDtos, int captchaId, string captchaText, string serviceSessionId)
        {
            return base.Channel.LockSeat_v4Async(lockSeatDtos, captchaId, captchaText, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetAgencyMessageAsync(string serviceSessionId)
        {
            return base.Channel.GetAgencyMessageAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> GetTicketAmountAsync(long p1, long p2, string serviceSessionId)
        {
            return base.Channel.GetTicketAmountAsync(p1, p2, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> passangerlibraryAsync(int TicketNumber, string TicketSeries, string Username, string Password, string serviceSessionId)
        {
            return base.Channel.passangerlibraryAsync(TicketNumber, TicketSeries, Username, Password, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> FreeSeatWagonAsync(int TrainNember, System.DateTime MoveDate, string Username, string Password, string serviceSessionId)
        {
            return base.Channel.FreeSeatWagonAsync(TrainNember, MoveDate, Username, Password, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> TicketManagementCheckAsync(int BookingNo, int sellid, int id, string serviceSessionId)
        {
            return base.Channel.TicketManagementCheckAsync(BookingNo, sellid, id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> TicketManagementCheckRajaAsync(int BookingNo, int sellid, int id, string serviceSessionId)
        {
            return base.Channel.TicketManagementCheckRajaAsync(BookingNo, sellid, id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ManagementSurveyVM> TicketManagementSurveygetAsync(int fk_users, int Survey, string serviceSessionId)
        {
            return base.Channel.TicketManagementSurveygetAsync(fk_users, Survey, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> TicketManagementSurveypostAsync(MyApp.SvcProxy.ManagementSurveyVM surveyVM, string serviceSessionId)
        {
            return base.Channel.TicketManagementSurveypostAsync(surveyVM, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ManagementofferVM> TicketManagementofferGetAsync(int fk_users, string offerText, string serviceSessionId)
        {
            return base.Channel.TicketManagementofferGetAsync(fk_users, offerText, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> GetTrainWagonMessageAsync(int pSCP, int pSCPs, int pTrainNumber, int pWagonTaype, System.DateTime pMoveDate, string serviceSessionId)
        {
            return base.Channel.GetTrainWagonMessageAsync(pSCP, pSCPs, pTrainNumber, pWagonTaype, pMoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> TicketManagementofferpostAsync(MyApp.SvcProxy.ManagementofferVM managementofferVM, string serviceSessionId)
        {
            return base.Channel.TicketManagementofferpostAsync(managementofferVM, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSellAsync(int id, int Sellid, int reservecode, string serviceSessionId)
        {
            return base.Channel.UpdateSellAsync(id, Sellid, reservecode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSellRajaAsync(int id, int Sellid, int reservecode, string serviceSessionId)
        {
            return base.Channel.UpdateSellRajaAsync(id, Sellid, reservecode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> TicketManagementPRAsync(int ManagementCode, string oldpass, string Newpass, string serviceSessionId)
        {
            return base.Channel.TicketManagementPRAsync(ManagementCode, oldpass, Newpass, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> TicketManagementrajaPRAsync(int ManagementCode, string oldpass, string Newpass, string serviceSessionId)
        {
            return base.Channel.TicketManagementrajaPRAsync(ManagementCode, oldpass, Newpass, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> TrainBossMessageAsync(string serviceSessionId)
        {
            return base.Channel.TrainBossMessageAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> PassangerCountAsync(System.DateTime MoveDate, int TrainNumber, string serviceSessionId)
        {
            return base.Channel.PassangerCountAsync(MoveDate, TrainNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateCheckingByNationalCodeAsync(int UserID, string Username, string Password, string NationalCode, string Series, string serviceSessionId)
        {
            return base.Channel.UserGateCheckingByNationalCodeAsync(UserID, Username, Password, NationalCode, Series, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateCheckingByNationalCode2Async(int UserID, string Username, string Password, string NationalCode, System.DateTime MoveDate, string serviceSessionId)
        {
            return base.Channel.UserGateCheckingByNationalCode2Async(UserID, Username, Password, NationalCode, MoveDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementVM[]> ManagemetloginAsync(string username, string password, string serviceSessionId)
        {
            return base.Channel.ManagemetloginAsync(username, password, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementVM[]> ManagemetloginRajaAsync(string username, string password, string serviceSessionId)
        {
            return base.Channel.ManagemetloginRajaAsync(username, password, serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ListTicketPlaningResponse> MyApp.SvcProxy.Online2ServicesSoap.ListTicketPlaningAsync(MyApp.SvcProxy.ListTicketPlaningRequest request)
        {
            return base.Channel.ListTicketPlaningAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ListTicketPlaningResponse> ListTicketPlaningAsync(int managercode, int pagenum, int pagesize, string iMoveDate, string irequsetname, string irequsetphone, string irequsetdate, int[][] sorttype, string serviceSessionId)
        {
            MyApp.SvcProxy.ListTicketPlaningRequest inValue = new MyApp.SvcProxy.ListTicketPlaningRequest();
            inValue.managercode = managercode;
            inValue.pagenum = pagenum;
            inValue.pagesize = pagesize;
            inValue.iMoveDate = iMoveDate;
            inValue.irequsetname = irequsetname;
            inValue.irequsetphone = irequsetphone;
            inValue.irequsetdate = irequsetdate;
            inValue.sorttype = sorttype;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).ListTicketPlaningAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.ListTicketPlaningrajaResponse> MyApp.SvcProxy.Online2ServicesSoap.ListTicketPlaningrajaAsync(MyApp.SvcProxy.ListTicketPlaningrajaRequest request)
        {
            return base.Channel.ListTicketPlaningrajaAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ListTicketPlaningrajaResponse> ListTicketPlaningrajaAsync(int managercode, int pagenum, int pagesize, string iMoveDate, string irequsetname, string irequsetphone, string irequsetdate, int[][] sorttype, string serviceSessionId)
        {
            MyApp.SvcProxy.ListTicketPlaningrajaRequest inValue = new MyApp.SvcProxy.ListTicketPlaningrajaRequest();
            inValue.managercode = managercode;
            inValue.pagenum = pagenum;
            inValue.pagesize = pagesize;
            inValue.iMoveDate = iMoveDate;
            inValue.irequsetname = irequsetname;
            inValue.irequsetphone = irequsetphone;
            inValue.irequsetdate = irequsetdate;
            inValue.sorttype = sorttype;
            inValue.serviceSessionId = serviceSessionId;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).ListTicketPlaningrajaAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<int> ListTicketPlaningTPAsync(int managercode, int pagenum, int pagesize, string iMoveDate, string irequsetname, string irequsetphone, string irequsetdate, string serviceSessionId)
        {
            return base.Channel.ListTicketPlaningTPAsync(managercode, pagenum, pagesize, iMoveDate, irequsetname, irequsetphone, irequsetdate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ListTicketPlaningrajaTPAsync(int managercode, int pagenum, int pagesize, string iMoveDate, string irequsetname, string irequsetphone, string irequsetdate, string serviceSessionId)
        {
            return base.Channel.ListTicketPlaningrajaTPAsync(managercode, pagenum, pagesize, iMoveDate, irequsetname, irequsetphone, irequsetdate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM[]> ListTicketPlaningSellAsync(int managercode, string serviceSessionId)
        {
            return base.Channel.ListTicketPlaningSellAsync(managercode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM[]> ListTicketPlaningSellrajaAsync(int managercode, string serviceSessionId)
        {
            return base.Channel.ListTicketPlaningSellrajaAsync(managercode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> updateListTicketPlaningAsync(int id, string mobileNumber, string requsetDate, string requsetName, int fromStation, int Tostation, string serviceSessionId)
        {
            return base.Channel.updateListTicketPlaningAsync(id, mobileNumber, requsetDate, requsetName, fromStation, Tostation, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> updateListTicketPlaningrajaAsync(int id, string mobileNumber, string requsetDate, string requsetName, int fromStation, int Tostation, int requestCount, string serviceSessionId)
        {
            return base.Channel.updateListTicketPlaningrajaAsync(id, mobileNumber, requsetDate, requsetName, fromStation, Tostation, requestCount, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ManagementmessageVM[]> ManagementMessageAsync(string serviceSessionId)
        {
            return base.Channel.ManagementMessageAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ManagementmessageVM[]> ManagementMessagerajaAsync(string serviceSessionId)
        {
            return base.Channel.ManagementMessagerajaAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> TicketPlaningFindByidAsync(int id, string serviceSessionId)
        {
            return base.Channel.TicketPlaningFindByidAsync(id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> TicketPlaningFindByidRajaAsync(int id, string serviceSessionId)
        {
            return base.Channel.TicketPlaningFindByidRajaAsync(id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> FindbyreservecodeAsync(int reservecode, int id, string serviceSessionId)
        {
            return base.Channel.FindbyreservecodeAsync(reservecode, id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> FindbyreservecoderajaAsync(int reservecode, int id, string serviceSessionId)
        {
            return base.Channel.FindbyreservecoderajaAsync(reservecode, id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> FindbyreservecodeRajaClientAsync(int BookingNo, int id, string serviceSessionId)
        {
            return base.Channel.FindbyreservecodeRajaClientAsync(BookingNo, id, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.OnlManagementticketplanningVM> FindbyreservecoderajaMobileAsync(int reservecode, string Mobile, string serviceSessionId)
        {
            return base.Channel.FindbyreservecoderajaMobileAsync(reservecode, Mobile, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> SiteSliderAsync(string serviceSessionId)
        {
            return base.Channel.SiteSliderAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> NewsSiteAsync(string serviceSessionId)
        {
            return base.Channel.NewsSiteAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> CivilResiveAsync(long NationalCode, int Birthday, System.DateTime movedate, string serviceSessionId)
        {
            return base.Channel.CivilResiveAsync(NationalCode, Birthday, movedate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> discountClubAsync(long nin, string firstName, string lastName, int birthOfDate, System.DateTime moveDate, int SCP, int SCPS, int trainNumber, int wagonType, int ownercode, string promotionCode, string serviceSessionId)
        {
            return base.Channel.discountClubAsync(nin, firstName, lastName, birthOfDate, moveDate, SCP, SCPS, trainNumber, wagonType, ownercode, promotionCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> discountClub2Async(long nin, string firstName, string lastName, int birthOfDate, System.DateTime moveDate, int SCP, int SCPS, int trainNumber, int wagonType, int ownercode, string promotionCode, int saleCenterCode, int sellerCode, string serviceSessionId)
        {
            return base.Channel.discountClub2Async(nin, firstName, lastName, birthOfDate, moveDate, SCP, SCPS, trainNumber, wagonType, ownercode, promotionCode, saleCenterCode, sellerCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> StatusNationalCodeAsync(string serviceSessionId)
        {
            return base.Channel.StatusNationalCodeAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> GetDBRemainTelephonyReserveAsync(string serviceSessionId)
        {
            return base.Channel.GetDBRemainTelephonyReserveAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> UrlShortAsync(string param)
        {
            return base.Channel.UrlShortAsync(param);
        }
        
        public System.Threading.Tasks.Task<string> GetUrlShortAsync(string param)
        {
            return base.Channel.GetUrlShortAsync(param);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateLoginAsync(string Username, string Password, string serviceSessionId)
        {
            return base.Channel.UserGateLoginAsync(Username, Password, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateCheckingAsync(int UserID, string Username, string Password, int Ticketid, string serviceSessionId)
        {
            return base.Channel.UserGateCheckingAsync(UserID, Username, Password, Ticketid, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserGateTicketNumberAsync(int TicketNumber, int UserID, string Username, string Password, string serviceSessionId)
        {
            return base.Channel.UserGateTicketNumberAsync(TicketNumber, UserID, Username, Password, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task TrainBossAsync(long TicketId, int isChecked, string serviceSessionId)
        {
            return base.Channel.TrainBossAsync(TicketId, isChecked, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListSmsAsync(string companyWhere, string selectCountLimit, string serviceSessionId)
        {
            return base.Channel.ListSmsAsync(companyWhere, selectCountLimit, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task UpdateSmsAsync(long ID, string Jsonstring, string serviceSessionId)
        {
            return base.Channel.UpdateSmsAsync(ID, Jsonstring, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> ListFPSSmsAsync(string serviceSessionId)
        {
            return base.Channel.ListFPSSmsAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task UpdateFPSSmsAsync(long ID, string Jsonstring, string serviceSessionId)
        {
            return base.Channel.UpdateFPSSmsAsync(ID, Jsonstring, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task SendFPSSmsAsync(string serviceSessionId)
        {
            return base.Channel.SendFPSSmsAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task SendSmsCompanyAsync(string serviceSessionId)
        {
            return base.Channel.SendSmsCompanyAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> pathListAsync(string serviceSessionId)
        {
            return base.Channel.pathListAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetPathStationAsync(int PathCode, string serviceSessionId)
        {
            return base.Channel.GetPathStationAsync(PathCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> sexListAsync(string serviceSessionId)
        {
            return base.Channel.sexListAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> DBClientVersionAsync(string serviceSessionId)
        {
            return base.Channel.DBClientVersionAsync(serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> PrintTypeAsync(int pSaleCenterCode, string serviceSessionId)
        {
            return base.Channel.PrintTypeAsync(pSaleCenterCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> OwnerallowforRuindAsync(int pSaleCenterCode, int WT, string serviceSessionId)
        {
            return base.Channel.OwnerallowforRuindAsync(pSaleCenterCode, WT, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> OwnerallowforreduplicateAsync(int pSaleCenterCode, int WT, string serviceSessionId)
        {
            return base.Channel.OwnerallowforreduplicateAsync(pSaleCenterCode, WT, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> OwnerallowforDamageAsync(int pSaleCenterCode, int WT, string serviceSessionId)
        {
            return base.Channel.OwnerallowforDamageAsync(pSaleCenterCode, WT, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> WebaddressAsync(int pSaleCenterCode, string Checksum, string serviceSessionId)
        {
            return base.Channel.WebaddressAsync(pSaleCenterCode, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> INTNWebaddressAsync(int pSaleCenterCode, string Checksum, string serviceSessionId)
        {
            return base.Channel.INTNWebaddressAsync(pSaleCenterCode, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> MaxDailyBuyingAsync(System.DateTime MD, int AgentCD, int SellerCD, string serviceSessionId)
        {
            return base.Channel.MaxDailyBuyingAsync(MD, AgentCD, SellerCD, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ViewPriceTicketWithFoodAsync(int rateCode, int tariffCode, int TcktTypeCD, int pathCode, int fromStation, int totStation, int wagonType, System.DateTime pDate, int trainNumber, int pscps, decimal discountClub, int psoldcount, int pration, string serviceSessionId)
        {
            return base.Channel.ViewPriceTicketWithFoodAsync(rateCode, tariffCode, TcktTypeCD, pathCode, fromStation, totStation, wagonType, pDate, trainNumber, pscps, discountClub, psoldcount, pration, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonAvaliableSeatCountAsync(int FromStation, int ToStation, System.DateTime MD, int RationCode, int SexCode, int duration, int TarifCode, int TicketType, string Checksum, string serviceSessionId)
        {
            return base.Channel.GetWagonAvaliableSeatCountAsync(FromStation, ToStation, MD, RationCode, SexCode, duration, TarifCode, TicketType, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonAvaliableSeatCountWithRationArrayAsync(int FromStation, int ToStation, System.DateTime MD, int[] RationCode, int SexCode, int duration, int TarifCode, int TicketType, string Checksum, string serviceSessionId)
        {
            return base.Channel.GetWagonAvaliableSeatCountWithRationArrayAsync(FromStation, ToStation, MD, RationCode, SexCode, duration, TarifCode, TicketType, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetWagonAvaliableSeatCountwithIp3WithRationArrayRailWayEdariAsync(int FromStation, int ToStation, System.DateTime MD, int[] RationCode, int SexCode, int duration, int TarifCode, int TicketType, string Checksum, string serviceSessionId)
        {
            return base.Channel.GetWagonAvaliableSeatCountwithIp3WithRationArrayRailWayEdariAsync(FromStation, ToStation, MD, RationCode, SexCode, duration, TarifCode, TicketType, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> TicketReportRow7Async(int CompanyCode, string serviceSessionId)
        {
            return base.Channel.TicketReportRow7Async(CompanyCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> InsertUsersAsync(
                    string pUsername, 
                    string pPassword, 
                    string pEmail, 
                    string pName, 
                    string pFamily, 
                    string pNationalCode, 
                    int pSex, 
                    int pprovince, 
                    string pCity, 
                    string paddress, 
                    string pTelNumber, 
                    string pTelNumber1, 
                    string pFax, 
                    int pSaleCenterCode, 
                    string Url, 
                    string serviceSessionId)
        {
            return base.Channel.InsertUsersAsync(pUsername, pPassword, pEmail, pName, pFamily, pNationalCode, pSex, pprovince, pCity, paddress, pTelNumber, pTelNumber1, pFax, pSaleCenterCode, Url, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<short> ActiveUserBySMSAsync(string nationCode, string activeCode, string serviceSessionId)
        {
            return base.Channel.ActiveUserBySMSAsync(nationCode, activeCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUsersAsync(int pUserCode, int pprovince, string pCity, string pTelNumber, string pTelNumber1, string pFax, string Paddress, string serviceSessionId)
        {
            return base.Channel.UpdateUsersAsync(pUserCode, pprovince, pCity, pTelNumber, pTelNumber1, pFax, Paddress, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ActivationUsersAsync(string HashCode, string serviceSessionId)
        {
            return base.Channel.ActivationUsersAsync(HashCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<string> DelayAsync(int DelayInSeconds, string serviceSessionId)
        {
            return base.Channel.DelayAsync(DelayInSeconds, serviceSessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MyApp.SvcProxy.UserSellReportResponse> MyApp.SvcProxy.Online2ServicesSoap.UserSellReportAsync(MyApp.SvcProxy.UserSellReportRequest request)
        {
            return base.Channel.UserSellReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.UserSellReportResponse> UserSellReportAsync(int pSaleCenterCode, int pUserCode, string serviceSessionId, System.Nullable<System.DateTime> pFromDate, System.Nullable<System.DateTime> pToDate)
        {
            MyApp.SvcProxy.UserSellReportRequest inValue = new MyApp.SvcProxy.UserSellReportRequest();
            inValue.pSaleCenterCode = pSaleCenterCode;
            inValue.pUserCode = pUserCode;
            inValue.serviceSessionId = serviceSessionId;
            inValue.pFromDate = pFromDate;
            inValue.pToDate = pToDate;
            return ((MyApp.SvcProxy.Online2ServicesSoap)(this)).UserSellReportAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> IntroducerSellReportAsync(int pSaleCenterCode, int pUserCode, System.DateTime FromDate, System.DateTime ToDate, string serviceSessionId)
        {
            return base.Channel.IntroducerSellReportAsync(pSaleCenterCode, pUserCode, FromDate, ToDate, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserSellDetailReport2Async(int appcode, long sailID, int pUserCode, string serviceSessionId)
        {
            return base.Channel.UserSellDetailReport2Async(appcode, sailID, pUserCode, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> UserSellDetailReport2_GUIDAsync(int appcode, long sailID, int pUserCode, string serviceSessionId, string GUID)
        {
            return base.Channel.UserSellDetailReport2_GUIDAsync(appcode, sailID, pUserCode, serviceSessionId, GUID);
        }
        
        public System.Threading.Tasks.Task<int> ChangePasswordAsync(int SaleCenterCode, string UserName, string OldPassWord, string NewPassWord, string Checksum, string serviceSessionId)
        {
            return base.Channel.ChangePasswordAsync(SaleCenterCode, UserName, OldPassWord, NewPassWord, Checksum, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ResetPasswordAsync(string NationalCode, string UserName, string serviceSessionId)
        {
            return base.Channel.ResetPasswordAsync(NationalCode, UserName, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> ResendIntenetAccountInfoAsync(string NationalCode, string PhoneNumber, string serviceSessionId)
        {
            return base.Channel.ResendIntenetAccountInfoAsync(NationalCode, PhoneNumber, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<int> NameUpdateAsync(long TicketId, string Name, string Family, string serviceSessionId)
        {
            return base.Channel.NameUpdateAsync(TicketId, Name, Family, serviceSessionId);
        }
        
        public System.Threading.Tasks.Task<MyApp.SvcProxy.ArrayOfXElement> GetTrainListAsync(int FromStation, int ToStation, System.DateTime fromDate, int duration, int RationCode, int SexCode, string Checksum, string serviceSessionId)
        {
            return base.Channel.GetTrainListAsync(FromStation, ToStation, fromDate, duration, RationCode, SexCode, Checksum, serviceSessionId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Online2ServicesSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.Online2ServicesSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Online2ServicesSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://webservice.raja.ir:6070/online2Services.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.Online2ServicesSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://webservice.raja.ir:6070/online2Services.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            Online2ServicesSoap,
            
            Online2ServicesSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "8.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
