//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.delete
{

    public class DeleteCurQuestionsRequest : IRequest<Int64>
    {
      public Int64 Id { get; set; }
    }
    public class DeleteCurQuestionsRequestValidator : CustomValidator<DeleteCurQuestionsRequest>
    {
       public DeleteCurQuestionsRequestValidator(IReadRepository<CurQuestions> repository, IStringLocalizer<DeleteCurQuestionsRequestValidator> localizer){}
    }
    public class DeleteCurQuestionsRequestHandler : IRequestHandler<DeleteCurQuestionsRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<CurQuestions> _repository;
    private readonly IStringLocalizer<DeleteCurQuestionsRequestHandler> _localizer;

    public DeleteCurQuestionsRequestHandler(IRepositoryWithEvents<CurQuestions> repository, IStringLocalizer<UpdateBrandRequestHandler> localizer) => (_repository, _localizer) = (repository, localizer);

    public async Task<Int64> Handle(DeleteCurQuestionsRequest request, CancellationToken cancellationToken)
    {
        var curQuestions = await _repository.GetByIdAsync(request.Id, cancellationToken);

        _ = curQuestions ?? throw new NotFoundException(_localizer["curQuestions.notfound"]);

        await _repository.DeleteAsync(curQuestions, cancellationToken);

        return request.Id;
    }
   }

}
