//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.delete
{

    public class DeleteSysUserTypeRequest : IRequest<Int64>
    {
      public Int64 Id { get; set; }
    }
    public class DeleteSysUserTypeRequestValidator : CustomValidator<DeleteSysUserTypeRequest>
    {
       public DeleteSysUserTypeRequestValidator(IReadRepository<SysUserType> repository, IStringLocalizer<DeleteSysUserTypeRequestValidator> localizer){}
    }
    public class DeleteSysUserTypeRequestHandler : IRequestHandler<DeleteSysUserTypeRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<SysUserType> _repository;
    private readonly IStringLocalizer<DeleteSysUserTypeRequestHandler> _localizer;

    public DeleteSysUserTypeRequestHandler(IRepositoryWithEvents<SysUserType> repository, IStringLocalizer<UpdateBrandRequestHandler> localizer) => (_repository, _localizer) = (repository, localizer);

    public async Task<Int64> Handle(DeleteSysUserTypeRequest request, CancellationToken cancellationToken)
    {
        var sysUserType = await _repository.GetByIdAsync(request.Id, cancellationToken);

        _ = sysUserType ?? throw new NotFoundException(_localizer["sysUserType.notfound"]);

        await _repository.DeleteAsync(sysUserType, cancellationToken);

        return request.Id;
    }
   }

}
