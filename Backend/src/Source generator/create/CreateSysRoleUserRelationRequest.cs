//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.create
{

    public class CreateSysRoleUserRelationRequest : IRequest<Int64>
    {

        #region Properties

        public long Id { get; set; }

        public long Roleid { get; set; }

        public long Userid { get; set; }

        #endregion
    }
    public class CreateSysRoleUserRelationRequestValidator : CustomValidator<CreateSysRoleUserRelationRequest>
    {
       public CreateSysRoleUserRelationRequestValidator(IReadRepository<SysRoleUserRelation> repository, IStringLocalizer<CreateSysRoleUserRelationRequestValidator> localizer){}
    }
    public class CreateSysRoleUserRelationRequestHandler : IRequestHandler<CreateSysRoleUserRelationRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<Brand> _repository;

    public CreateSysRoleUserRelationRequestHandler(IRepositoryWithEvents<SysRoleUserRelation> repository) => _repository = repository;

    public async Task<Int64> Handle(CreateSysRoleUserRelationRequest request, CancellationToken cancellationToken)
    {
        var sysRoleUserRelation = new SysRoleUserRelation(Roleid,Userid)

        await _repository.AddAsync(sysRoleUserRelation, cancellationToken);

        return SysRoleUserRelation.Id;
    }
   }

}
