//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.create
{

    public class CreateCurRelatedJobsRequest : IRequest<Int64>
    {

        #region Properties

        public int? CourseId { get; set; }

        public long Createby { get; set; }

        public System.DateTime Createtime { get; set; }

        public bool Isdeleted { get; set; }

        public long JobId { get; set; }

        public string JobTitle { get; set; }

        public long? Modifyby { get; set; }

        public System.DateTime? Modifytime { get; set; }

        #endregion
    }
    public class CreateCurRelatedJobsRequestValidator : CustomValidator<CreateCurRelatedJobsRequest>
    {
       public CreateCurRelatedJobsRequestValidator(IReadRepository<CurRelatedJobs> repository, IStringLocalizer<CreateCurRelatedJobsRequestValidator> localizer){}
    }
    public class CreateCurRelatedJobsRequestHandler : IRequestHandler<CreateCurRelatedJobsRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<Brand> _repository;

    public CreateCurRelatedJobsRequestHandler(IRepositoryWithEvents<CurRelatedJobs> repository) => _repository = repository;

    public async Task<Int64> Handle(CreateCurRelatedJobsRequest request, CancellationToken cancellationToken)
    {
        var curRelatedJobs = new CurRelatedJobs(CourseId,Createby,Createtime,Isdeleted,JobId,JobTitle,Modifyby,Modifytime)

        await _repository.AddAsync(curRelatedJobs, cancellationToken);

        return CurRelatedJobs.Id;
    }
   }

}
