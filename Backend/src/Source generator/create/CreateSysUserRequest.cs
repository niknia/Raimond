//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.create
{

    public class CreateSysUserRequest : IRequest<Int64>
    {

        #region Properties

        public string Account { get; set; }

        public string Avatar { get; set; }

        public System.DateTime? Birthday { get; set; }

        public long Createby { get; set; }

        public System.DateTime Createtime { get; set; }

        public string Email { get; set; }

        public string FkMenu { get; set; }

        public long FkOrganization { get; set; }

        public string FkRole { get; set; }

        public long? FkUserType { get; set; }

        public int Gender { get; set; }

        public long Id { get; set; }

        public bool IsConfirmed { get; set; }

        public bool Isdeleted { get; set; }

        public string Mobile { get; set; }

        public long Modifyby { get; set; }

        public System.DateTime Modifytime { get; set; }

        public string Name { get; set; }

        public string NationalCode { get; set; }

        public string OtpToken { get; set; }

        public System.DateTime? Otpvalidto { get; set; }

        public string Password { get; set; }

        public string Salt { get; set; }

        public bool Status { get; set; }

        #endregion
    }
    public class CreateSysUserRequestValidator : CustomValidator<CreateSysUserRequest>
    {
       public CreateSysUserRequestValidator(IReadRepository<SysUser> repository, IStringLocalizer<CreateSysUserRequestValidator> localizer){}
    }
    public class CreateSysUserRequestHandler : IRequestHandler<CreateSysUserRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<Brand> _repository;

    public CreateSysUserRequestHandler(IRepositoryWithEvents<SysUser> repository) => _repository = repository;

    public async Task<Int64> Handle(CreateSysUserRequest request, CancellationToken cancellationToken)
    {
        var sysUser = new SysUser(Account,Avatar,Birthday,Createby,Createtime,Email,FkMenu,FkOrganization,FkRole,FkUserType,Gender,IsConfirmed,Isdeleted,Mobile,Modifyby,Modifytime,Name,NationalCode,OtpToken,Otpvalidto,Password,Salt,Status)

        await _repository.AddAsync(sysUser, cancellationToken);

        return SysUser.Id;
    }
   }

}
