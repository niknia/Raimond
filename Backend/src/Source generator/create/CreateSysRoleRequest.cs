//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.create
{

    public class CreateSysRoleRequest : IRequest<Int64>
    {

        #region Properties

        public string Code { get; set; }

        public long Createby { get; set; }

        public System.DateTime Createtime { get; set; }

        public int Datascope { get; set; }

        public string FkMenu { get; set; }

        public long Id { get; set; }

        public long Modifyby { get; set; }

        public System.DateTime Modifytime { get; set; }

        public string Name { get; set; }

        public int Ordinal { get; set; }

        public bool Status { get; set; }

        #endregion
    }
    public class CreateSysRoleRequestValidator : CustomValidator<CreateSysRoleRequest>
    {
       public CreateSysRoleRequestValidator(IReadRepository<SysRole> repository, IStringLocalizer<CreateSysRoleRequestValidator> localizer){}
    }
    public class CreateSysRoleRequestHandler : IRequestHandler<CreateSysRoleRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<Brand> _repository;

    public CreateSysRoleRequestHandler(IRepositoryWithEvents<SysRole> repository) => _repository = repository;

    public async Task<Int64> Handle(CreateSysRoleRequest request, CancellationToken cancellationToken)
    {
        var sysRole = new SysRole(Code,Createby,Createtime,Datascope,FkMenu,Modifyby,Modifytime,Name,Ordinal,Status)

        await _repository.AddAsync(sysRole, cancellationToken);

        return SysRole.Id;
    }
   }

}
