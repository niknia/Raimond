//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.update
{

    public class UpdateSysRoleMenuRelationRequest : IRequest<Int64>
    {

        #region Properties

        public long Id { get; set; }

        public long Menuid { get; set; }

        public long Roleid { get; set; }

        #endregion
    }
    public class UpdateSysRoleMenuRelationRequestValidator : CustomValidator<UpdateSysRoleMenuRelationRequest>
    {
       public UpdateSysRoleMenuRelationRequestValidator(IReadRepository<SysRoleMenuRelation> repository, IStringLocalizer<UpdateSysRoleMenuRelationRequestValidator> localizer){}
    }
    public class UpdateSysRoleMenuRelationRequestHandler : IRequestHandler<UpdateSysRoleMenuRelationRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<SysRoleMenuRelation> _repository;
    private readonly IStringLocalizer<UpdateSysRoleMenuRelationRequestHandler> _localizer;

    public UpdateSysRoleMenuRelationRequestHandler(IRepositoryWithEvents<SysRoleMenuRelation> repository, IStringLocalizer<UpdateBrandRequestHandler> localizer) => (_repository, _localizer) = (repository, localizer);

    public async Task<Int64> Handle(UpdateSysRoleMenuRelationRequest request, CancellationToken cancellationToken)
    {
        var sysRoleMenuRelation = await _repository.GetByIdAsync(request.Id, cancellationToken);

        _ = sysRoleMenuRelation ?? throw new NotFoundException(string.Format(_localizer["sysRoleMenuRelation.notfound"], request.Id));

        sysRoleMenuRelation.Update(request.Id,request.Menuid,request.Roleid);

        await _repository.UpdateAsync(sysRoleMenuRelation, cancellationToken);

        return request.Id;
    }
   }

}
