//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.update
{

    public class UpdateCurTeachersRequest : IRequest<Int64>
    {

        #region Properties

        public string Address { get; set; }

        public System.DateTime? BirthDate { get; set; }

        public string BirthPlace { get; set; }

        public long Createby { get; set; }

        public System.DateTime? CreatedAt { get; set; }

        public System.DateTime Createtime { get; set; }

        public int DegreeId { get; set; }

        public int? DenominationId { get; set; }

        public string FatherName { get; set; }

        public int? FieldOfStudyId { get; set; }

        public string FirstName { get; set; }

        public string Gender { get; set; }

        public long Id { get; set; }

        public string IdIssuePlace { get; set; }

        public string IdNumber { get; set; }

        public bool? IsAcademicMember { get; set; }

        public bool Isdeleted { get; set; }

        public string LastName { get; set; }

        public int? MaritalStatusId { get; set; }

        public string MilitaryStatus { get; set; }

        public long? Modifyby { get; set; }

        public System.DateTime? Modifytime { get; set; }

        public string NationalCode { get; set; }

        public string PhoneLandline { get; set; }

        public string PhoneMobile { get; set; }

        public string PostalCode { get; set; }

        public int? ReligionId { get; set; }

        public int TeacherTypeId { get; set; }

        public System.DateTime? UpdatedAt { get; set; }

        #endregion
    }
    public class UpdateCurTeachersRequestValidator : CustomValidator<UpdateCurTeachersRequest>
    {
       public UpdateCurTeachersRequestValidator(IReadRepository<CurTeachers> repository, IStringLocalizer<UpdateCurTeachersRequestValidator> localizer){}
    }
    public class UpdateCurTeachersRequestHandler : IRequestHandler<UpdateCurTeachersRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<CurTeachers> _repository;
    private readonly IStringLocalizer<UpdateCurTeachersRequestHandler> _localizer;

    public UpdateCurTeachersRequestHandler(IRepositoryWithEvents<CurTeachers> repository, IStringLocalizer<UpdateBrandRequestHandler> localizer) => (_repository, _localizer) = (repository, localizer);

    public async Task<Int64> Handle(UpdateCurTeachersRequest request, CancellationToken cancellationToken)
    {
        var curTeachers = await _repository.GetByIdAsync(request.Id, cancellationToken);

        _ = curTeachers ?? throw new NotFoundException(string.Format(_localizer["curTeachers.notfound"], request.Id));

        curTeachers.Update(request.Address,request.BirthDate,request.BirthPlace,request.Createby,request.CreatedAt,request.Createtime,request.DegreeId,request.DenominationId,request.FatherName,request.FieldOfStudyId,request.FirstName,request.Gender,request.Id,request.IdIssuePlace,request.IdNumber,request.IsAcademicMember,request.Isdeleted,request.LastName,request.MaritalStatusId,request.MilitaryStatus,request.Modifyby,request.Modifytime,request.NationalCode,request.PhoneLandline,request.PhoneMobile,request.PostalCode,request.ReligionId,request.TeacherTypeId,request.UpdatedAt);

        await _repository.UpdateAsync(curTeachers, cancellationToken);

        return request.Id;
    }
   }

}
