//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Dkd.App.Admin.Application.update
{

    public class UpdateSysUserRequest : IRequest<Int64>
    {

        #region Properties

        public string Account { get; set; }

        public string Avatar { get; set; }

        public System.DateTime? Birthday { get; set; }

        public long Createby { get; set; }

        public System.DateTime Createtime { get; set; }

        public string Email { get; set; }

        public string FkMenu { get; set; }

        public long FkOrganization { get; set; }

        public string FkRole { get; set; }

        public long? FkUserType { get; set; }

        public int Gender { get; set; }

        public long Id { get; set; }

        public bool IsConfirmed { get; set; }

        public bool Isdeleted { get; set; }

        public string Mobile { get; set; }

        public long Modifyby { get; set; }

        public System.DateTime Modifytime { get; set; }

        public string Name { get; set; }

        public string NationalCode { get; set; }

        public string OtpToken { get; set; }

        public System.DateTime? Otpvalidto { get; set; }

        public string Password { get; set; }

        public string Salt { get; set; }

        public bool Status { get; set; }

        #endregion
    }
    public class UpdateSysUserRequestValidator : CustomValidator<UpdateSysUserRequest>
    {
       public UpdateSysUserRequestValidator(IReadRepository<SysUser> repository, IStringLocalizer<UpdateSysUserRequestValidator> localizer){}
    }
    public class UpdateSysUserRequestHandler : IRequestHandler<UpdateSysUserRequest, Int64>
    {
    // Add Domain Events automatically by using IRepositoryWithEvents
    private readonly IRepositoryWithEvents<SysUser> _repository;
    private readonly IStringLocalizer<UpdateSysUserRequestHandler> _localizer;

    public UpdateSysUserRequestHandler(IRepositoryWithEvents<SysUser> repository, IStringLocalizer<UpdateBrandRequestHandler> localizer) => (_repository, _localizer) = (repository, localizer);

    public async Task<Int64> Handle(UpdateSysUserRequest request, CancellationToken cancellationToken)
    {
        var sysUser = await _repository.GetByIdAsync(request.Id, cancellationToken);

        _ = sysUser ?? throw new NotFoundException(string.Format(_localizer["sysUser.notfound"], request.Id));

        sysUser.Update(request.Account,request.Avatar,request.Birthday,request.Createby,request.Createtime,request.Email,request.FkMenu,request.FkOrganization,request.FkRole,request.FkUserType,request.Gender,request.Id,request.IsConfirmed,request.Isdeleted,request.Mobile,request.Modifyby,request.Modifytime,request.Name,request.NationalCode,request.OtpToken,request.Otpvalidto,request.Password,request.Salt,request.Status);

        await _repository.UpdateAsync(sysUser, cancellationToken);

        return request.Id;
    }
   }

}
