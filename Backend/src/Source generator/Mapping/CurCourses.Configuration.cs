//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable disable

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Dkd.App.Planingschedule.Repository.Entities.Config
{
    /// <summary>
    /// There are no comments for CurCoursesConfiguration in the schema.
    /// </summary>
    public class CurCoursesConfiguration : AbstractEntityTypeConfiguration<CurCourses>
    {
        /// <summary>
        /// There are no comments for Configure(EntityTypeBuilder<CurCourses> builder) method in the schema.
        /// </summary>
        public override void Configure(EntityTypeBuilder<CurCourses> builder)
        {
            base.Configure(builder);
            builder.ToTable(@"cur_courses", SchemaNames.DefaultEntities);
            builder.Property(x => x.Code).HasColumnName(@"code").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(50);
            builder.Property(x => x.CourseTypeId).HasColumnName(@"course_type_id").HasColumnType(@"bigint").ValueGeneratedNever();
            builder.Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType(@"datetime").ValueGeneratedOnAdd().HasDefaultValueSql(@"CURRENT_TIMESTAMP");
            builder.Property(x => x.CreatedBy).HasColumnName(@"created_by").HasColumnType(@"bigint").ValueGeneratedNever();
            builder.Property(x => x.Description).HasColumnName(@"description").HasColumnType(@"text").ValueGeneratedNever();
            builder.Property(x => x.Isdeleted).HasColumnName(@"isdeleted").HasColumnType(@"tinyint").IsRequired().ValueGeneratedNever().HasPrecision(1, 0).HasDefaultValueSql(@"0");
            builder.Property(x => x.PracticalHours).HasColumnName(@"practical_hours").HasColumnType(@"int").ValueGeneratedNever();
            builder.Property(x => x.Proposal).HasColumnName(@"proposal").HasColumnType(@"text").ValueGeneratedNever();
            builder.Property(x => x.QualificationId).HasColumnName(@"qualification_id").HasColumnType(@"bigint").ValueGeneratedNever();
            builder.Property(x => x.SpecializationId).HasColumnName(@"specialization_id").HasColumnType(@"bigint").ValueGeneratedNever();
            builder.Property(x => x.TeachingMethodId).HasColumnName(@"teaching_method_id").HasColumnType(@"bigint").ValueGeneratedNever();
            builder.Property(x => x.TheoreticalHours).HasColumnName(@"theoretical_hours").HasColumnType(@"int").ValueGeneratedNever();
            builder.Property(x => x.Title).HasColumnName(@"title").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            builder.HasKey(@"Id");
            builder.HasMany(x => x.CurClasses).WithOne(op => op.CurCourses).HasForeignKey(@"CourseId").IsRequired(true);
            builder.HasOne(x => x.CurUsers).WithMany(op => op.CurCourses).HasForeignKey(@"CreatedBy").IsRequired(false);
            builder.HasMany(x => x.CurLrsLogs).WithOne(op => op.CurCourses).HasForeignKey(@"CourseId").IsRequired(false);
        }


    }

}
