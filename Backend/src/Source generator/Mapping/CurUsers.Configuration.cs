//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable disable

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Dkd.App.Planingschedule.Repository.Entities.Config
{
    /// <summary>
    /// There are no comments for CurUsersConfiguration in the schema.
    /// </summary>
    public class CurUsersConfiguration : AbstractEntityTypeConfiguration<CurUsers>
    {
        /// <summary>
        /// There are no comments for Configure(EntityTypeBuilder<CurUsers> builder) method in the schema.
        /// </summary>
        public override void Configure(EntityTypeBuilder<CurUsers> builder)
        {
            base.Configure(builder);
            builder.ToTable(@"cur_users", SchemaNames.DefaultEntities);
            builder.Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType(@"datetime").ValueGeneratedOnAdd().HasDefaultValueSql(@"CURRENT_TIMESTAMP");
            builder.Property(x => x.Email).HasColumnName(@"email").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(255);
            builder.Property(x => x.EmployeeNumber).HasColumnName(@"employee_number").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(20);
            builder.Property(x => x.FullName).HasColumnName(@"full_name").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            builder.Property(x => x.Isdeleted).HasColumnName(@"isdeleted").HasColumnType(@"tinyint").IsRequired().ValueGeneratedNever().HasPrecision(1, 0).HasDefaultValueSql(@"0");
            builder.Property(x => x.NationalCode).HasColumnName(@"national_code").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(20);
            builder.Property(x => x.OrganizationId).HasColumnName(@"organization_id").HasColumnType(@"bigint").ValueGeneratedNever();
            builder.Property(x => x.Phone).HasColumnName(@"phone").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(20);
            builder.Property(x => x.Role).HasColumnName(@"role").HasColumnType(@"enum").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Status).HasColumnName(@"status").HasColumnType(@"enum").ValueGeneratedNever().HasDefaultValueSql(@"'active'");
            builder.Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType(@"datetime").ValueGeneratedOnAdd().HasDefaultValueSql(@"CURRENT_TIMESTAMP");
            builder.HasKey(@"Id");
            builder.HasIndex(@"NationalCode").IsUnique(true);
            builder.HasMany(x => x.CurAssignmentSubmissions_StudentId).WithOne(op => op.CurUsers_StudentId).HasForeignKey(@"StudentId").IsRequired(true);
            builder.HasMany(x => x.CurAssignmentSubmissions_ReviewedBy).WithOne(op => op.CurUsers_ReviewedBy).HasForeignKey(@"ReviewedBy").IsRequired(false);
            builder.HasMany(x => x.CurAssignments).WithOne(op => op.CurUsers).HasForeignKey(@"CreatedBy").IsRequired(false);
            builder.HasOne(x => x.CurAttendances).WithOne(op => op.CurUsers).HasForeignKey(typeof(CurAttendances), @"StudentId").IsRequired(false);
            builder.HasMany(x => x.CurClasses).WithOne(op => op.CurUsers).HasForeignKey(@"TeacherId").IsRequired(true);
            builder.HasMany(x => x.CurCourses).WithOne(op => op.CurUsers).HasForeignKey(@"CreatedBy").IsRequired(false);
            builder.HasOne(x => x.CurEnrollments).WithOne(op => op.CurUsers).HasForeignKey(typeof(CurEnrollments), @"StudentId").IsRequired(false);
            builder.HasMany(x => x.CurLrsLogs).WithOne(op => op.CurUsers).HasForeignKey(@"UserId").IsRequired(true);
            builder.HasOne(x => x.CurQuizSubmissions).WithOne(op => op.CurUsers).HasForeignKey(typeof(CurQuizSubmissions), @"StudentId").IsRequired(false);
            builder.HasMany(x => x.CurQuizzes).WithOne(op => op.CurUsers).HasForeignKey(@"CreatedBy").IsRequired(false);
            builder.HasOne(x => x.CurOrganizations).WithMany(op => op.CurUsers).HasForeignKey(@"OrganizationId").IsRequired(false);
        }


    }

}
