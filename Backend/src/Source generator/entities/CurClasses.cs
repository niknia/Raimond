//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 8/3/2025 12:38:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;

namespace Dkd.App.Admin.Repository.Entities
{
    [Serializable()]
    public partial class CurClasses : EfFullAuditEntity, ICloneable {

        public CurClasses()
        {
            this.Isdeleted = false;
            this.Status = @"planned";
            this.CurAssignments = new List<CurAssignments>();
            this.CurQuizzes = new List<CurQuizzes>();
            this.CurSchedules = new List<CurSchedules>();
            OnCreated();
        }

        public long CourseId { get; set; }

        public DateTime? EndDate { get; set; }

        public bool Isdeleted { get; set; }

        public int? MaxStudents { get; set; }

        public DateTime? StartDate { get; set; }

        public string? Status { get; set; }

        public long TeacherId { get; set; }

        public virtual IList<CurAssignments> CurAssignments { get; set; }

        public virtual CurAttendances CurAttendances { get; set; }

        public virtual CurCourses CurCourses { get; set; }

        public virtual CurUsers CurUsers { get; set; }

        public virtual CurEnrollments CurEnrollments { get; set; }

        public virtual IList<CurQuizzes> CurQuizzes { get; set; }

        public virtual IList<CurSchedules> CurSchedules { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        public override bool Equals(object obj)
        {
          CurClasses toCompare = obj as CurClasses;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.Id, toCompare.Id))
            return false;

          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + Id.GetHashCode();
          return hashCode;
        }

        #endregion

        #region ICloneable Members

        public virtual object Clone()
        {
            CurClasses obj = new CurClasses();
            obj.CourseId = CourseId;
            obj.EndDate = EndDate;
            obj.Isdeleted = Isdeleted;
            obj.MaxStudents = MaxStudents;
            obj.StartDate = StartDate;
            obj.Status = Status;
            obj.TeacherId = TeacherId;
            return obj;
        }

        #endregion
    }

}
